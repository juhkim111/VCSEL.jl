var documenterSearchIndex = {"docs":
[{"location":"man/VCModel/#VCModel-1","page":"VCModel","title":"VCModel","text":"","category":"section"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"We have the following variance components model: ","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"textvec(Y) sim textNormal(XB Sigma_1 otimes V_1 + cdots + Sigma_m otimes V_m + Sigma_0 otimes V_0)  hspace8em (1)","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"where textvec(cdot) stacks up columns of the given matrix on top of one another.","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"In the equation (1), ","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"Y: ntimes d response matrix \nX: ntimes p covariate matrix \nV = V_1V_mV_0: a vector of m+1 n times n covariance matrices","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"form the data and ","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"B: p times d mean parameter matrix that explains the effect of covariates X on response Y\nSigma = Sigma_1Sigma_mSigma_0: a vector of m+1 d times d variance components matrices ","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"are parameters. ","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"If Y is a n times 1  vector (ie d=1), (1) boils down to ","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"Y sim textNormal(XB Sigma_1 V_1 + cdots + Sigma_m V_m + Sigma_0 V_0) ","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"where ","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"B: p times 1 mean parameter vector \nSigma_i i=1ldots m represent non-negative scalar variance components. ","category":"page"},{"location":"man/VCModel/#Goal-1","page":"VCModel","title":"Goal","text":"","category":"section"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"Suppose we want to identify variance components that are associated with Y This can be achieved by VCSEL algorithm, an MM algorithm that selects relevant variance components via penalization method. ","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"To find the estimates of parameters (B Sigma_1 ldots Sigma_m Sigma_0) we take 2 steps.","category":"page"},{"location":"man/VCModel/#Steps-1","page":"VCModel","title":"Steps","text":"","category":"section"},{"location":"man/VCModel/#Step-0:-Load-the-package-1","page":"VCModel","title":"Step 0: Load the package","text":"","category":"section"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"using VCSEL","category":"page"},{"location":"man/VCModel/#Step-1:-Construct-a-model-with-data-1","page":"VCModel","title":"Step 1: Construct a model with data","text":"","category":"section"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"Construct an instance of VCModel, which requires users to supply","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"Y: n x d response matrix \nX: n x p covariate matrix (if exists)\nV = [V1,...,Vm,V0]: a vector of m+1 n x n covariance matrices. ","category":"page"},{"location":"man/VCModel/#initialize-VCModel-instance-1","page":"VCModel","title":"initialize VCModel instance","text":"","category":"section"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"vcm1 = VCModel(Y, X, V) vcm2 = VCModel(Y, V) # if there's no covariate matrix  VCModel also has the following fields for its parameters: ","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"B: p \\times d mean regression coefficients \n$\\Sigma = [\\Sigma_[1],...,\\Sigma_[m],\\Sigma_[0]]$: variance component parameters.","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"By default, the vector of varaince component parameters are initialized to be a vector of identity matrices (e.g. [Matrix(1.0*I, d, d) for i in 1:(m+1)]). Users can set initial values of variance component parameters in this step if they wish to.  vcm3 = VCModel(Y, X, V, Σ) vcm4 = VCModel(Y, V, Σ)","category":"page"},{"location":"man/VCModel/#Step-2:-Fit-model-1","page":"VCModel","title":"Step 2: Fit model","text":"","category":"section"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"Call optimization routine vcselect! to select variance components at a given tuning parameter lambda with some penalty (options: NoPenalty(), L1Penalty(), MCPPenalty()).","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"Required input argument for executing vcselect! is VCModel:","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"vcm: VCModel.","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"Keyword arguments for vcselect! are:","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"penfun: penalty function. Default is NoPenalty(). Other options are L1Penalty() and MCPPenalty().\nλ: tuning parameter. Default is 1.0.    \npenwt: penalty weights. Default is (1,...1,0).\nstandardize: logical flag for covariance matrix standardization. Default is false.   If true, V[i] is standardized by its Frobenius norm, and parameter estimates are    returned on the original scale.\nmaxiters: maximum number of iterations. Default is 1000.\ntol: convergence tolerance. Default is 1e-5.\nverbose: display switch. Default is false.\nchecktype: check argument type switch. Default is true.","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"Examples:","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"vcselect!(vcm1; penfun=L1Penalty(), λ=1.5)\nvcselect!(vcm2; penfun=MCPPenalty(), λ=5.5)","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"If penalty function is given but tuning parameter lambda is not given, lambda is set to 1.0. ","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"# following commands are equivalent \nvcselect!(vcm3; penfun=L1Penalty()) \nvcselect!(vcm3; penfun=L1Penalty(), λ=1.0) ","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"If no penalty function is given, it fits model without any penalty, which is same as penfun=NoPenalty() or λ=0.","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"# following commands are equivalent \nvcselect!(vcm4)\nvcselect!(vcm4; penfun=NoPenalty())\nvcselect!(vcm4; λ=0)","category":"page"},{"location":"man/VCModel/#Step-2-Alternative:-Get-solution-path-1","page":"VCModel","title":"Step 2 Alternative: Get solution path","text":"","category":"section"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"If you want to fit a model over a grid of tuning parameter lambda values (i.e. obtain solution path), use vcselectpath!:","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"Required input argument for executing vcselectpath! is VCModel: vcselectpath!(vcm1) If we only supply VCModel instance when calling vcselectpath!, it returns the same output as vcselect! with penfun=NoPenalty(). ","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"vcselectpath! provides options for users to customize. Keyword arguments for the function are ","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"penfun: penalty function (e.g. NoPenalty(), L1Penalty(), MCPPenalty()). Default is NoPenalty().\npenwt: weights for penalty term. Default is (1,1,...1,0).\nnλ: number of λ values in the sequence. Default is 100. \nλpath: user-provided sequence of λ values in ascending order. Typically the program computes its own λ sequence based on nλ, but supplying λpath overrides this.\nmaxiter: maximum number of iteration for MM loop. Default is 1000.\nstandardize: logical flag for covariance matrix standardization. Default is false. If true, V[i] is standardized by its Frobenius norm.\ntol: convergence tolerance. Default is 1e-6.","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"Example: ","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"vcm = VCModel(Y, X, V)","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"Here we call vcselectpath! with penfun=L1Penalty(). Since we do not provide nλ or λpath, a grid of 100 λ values is generated internally. ","category":"page"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"vcm1 = deepcopy(vcm)\nΣ̂path, β̂path, λpath, objpath, niterspath = vcselectpath!(vcm1; \n    penfun=L1Penalty());","category":"page"},{"location":"man/VCModel/#Summarise/visualize-results-1","page":"VCModel","title":"Summarise/visualize results","text":"","category":"section"},{"location":"man/VCModel/#","page":"VCModel","title":"VCModel","text":"","category":"page"},{"location":"man/VCSEL/#What-is-VCSEL?-1","page":"What is VCSEL?","title":"What is VCSEL?","text":"","category":"section"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"VCSEL is an Majorization-Minimization (MM) algorithm that selects variance components that are associated with response variable(s) via penalization method. ","category":"page"},{"location":"man/VCSEL/#What-are-variance-components?-1","page":"What is VCSEL?","title":"What are variance components?","text":"","category":"section"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"Suppose we have the following mixed model: ","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"Y = Xbeta + Zgamma + epsilon ","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"Y is an ntimes 1 vector of responses \nX is the n times p known design matrix for the fixed effects \nZ is the n times q known design matrix for the random effects \nbeta is a p times 1 vector of unknown fixed effects  \ngamma is a q times 1 vector of unknown random effects with gamma sim textNormal(0 sigma_gamma^2 I_q)\nepsilon is an ntimes 1 vector of unknown random errors with epsilon sim textNormal(0 sigma_epsilon^2 I_n)\ngamma and epsilon are independent.","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"Equivalently, we can write ","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"Y sim textNormal(Xbeta sigma_gamma^2 Z Z^T + sigma_epsilon^2)","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"which means variance of the dependent variable Y (aka textVar(Y)) equals to sigma_gamma^2 Z Z^T + sigma_epsilon^2. ","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"Because sigma_gamma^2 and sigma_epsilon^2 contribute to the variance of the dependent variable Y, they are called variance components. ","category":"page"},{"location":"man/VCSEL/#Testing-for-zero-variance-component-1","page":"What is VCSEL?","title":"Testing for zero variance component","text":"","category":"section"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"Suppose one wants to test whether the random effects is significant. Then we can set up the null hypothesis H_0 gamma = 0, which indicates that Z has no effect on the mean of Y. ","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"If q (the number of elements in gamma) is large, however, we have too many parameters to estimate, running into limited power issue. ","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"Instead, we can test if the variance component is zero","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"H_0 sigma_gamma^2 = 0","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"which is equivalent to testing H_0 gamma = 0.","category":"page"},{"location":"man/VCSEL/#What-if-there-are-multiple-variance-components?-1","page":"What is VCSEL?","title":"What if there are multiple variance components?","text":"","category":"section"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"Suppose that you have multiple random effects vector and that you want to find which random effects are associated with the response variable. Then you can jointly model all random effects:","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"Y = Xbeta + Z_1gamma_1 + cdot + Z_m gamma_m + epsilon ","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"where ","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"Z_i is the n times q_i known design matrix for the random effects where i=1dots m\ngamma_i sim textNormal(0 sigma_i I_q_i) i=1ldots m\nepsilon sim textNormal(0 sigma_epsilon I_n).","category":"page"},{"location":"man/VCSEL/#VCSEL-1","page":"What is VCSEL?","title":"VCSEL","text":"","category":"section"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"Now this is were VCSEL algorithm comes in. VCSEL implements Majorization-Minimization (MM) algorithm to select variance components that are relevant to the response Y.","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"Under the hood, VCSEL algorithm minimizes the negative log-likelihood of the model plus a penalty using a surrogate function. For details, please see our paper. ","category":"page"},{"location":"man/VCSEL/#VCSEL.jl-features-1","page":"What is VCSEL?","title":"VCSEL.jl features","text":"","category":"section"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"VCSEL.jl package can handle ","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"univariate response model ","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"```math \nY \\sim \\text{Normal}(X\\beta, \\sigma_1^2 V_1 + \\cdots + \\sigma_m^2 V_m + \\sigma_{\\epsilon}^2 I_n)\n```\nwhere $Y$ is an $n\\times 1$ vector and $V_i ,i=1,\\ldots, m$ are covariance matrices corresponding to each random effects vector (e.g. $V_i = Z_i Z_i^T$ in the notation above).","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"multivariate response model ","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"```math \nY \\sim \\text{Normal}(X\\beta, \\Sigma_1 \\otimes V_1 + \\cdots + \\Sigma_m \\otimes V_m + \\Sigma_{\\epsilon} \\otimes I_n)\n```\n\nwhere $Y$ is an $n\\times d$ matrix, $\\Sigma_i, i=1,\\ldots, m$ are $d\\times d$ variance component matrices, and $\\otimes$ is a [Kronecker matrix](https://en.wikipedia.org/wiki/Kronecker_product).","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"univariate response model with interaction terms ","category":"page"},{"location":"man/VCSEL/#","page":"What is VCSEL?","title":"What is VCSEL?","text":"```math \nY \\sim \\text{Normal}(X \\beta, \\sigma_{11}^2 V_{11} + \\sigma_{12}^2 V_{12} + \\cdots +  \\sigma_{m1}^2 V_{m1} + \\sigma_{m2}^2 V_{m2} + \\sigma_{\\epsilon}^2 I_n)\n```\n\nwhere $Y$ is an $n \\times 1$ vector and $\\sigma_{i1}^2$ and $\\sigma_{i2}^2$ are a pair of variance components that are selected/unselected together ($i=1,\\ldots, m$). $\\sigma_{i1}^2$ represents variance component for main effects while $\\sigma_{i2}^2$ represents variance component for interaction effects.","category":"page"},{"location":"man/VCintModel/#VCintModel-1","page":"VCintModel","title":"VCintModel","text":"","category":"section"},{"location":"man/VCModel_example/#VCModel-1","page":"VCModel","title":"VCModel","text":"","category":"section"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Machine information ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"versioninfo()","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Julia Version 1.3.1\nCommit 2d5741174c (2019-12-30 21:36 UTC)\nPlatform Info:\n  OS: macOS (x86_64-apple-darwin18.6.0)\n  CPU: Intel(R) Core(TM) i5-6267U CPU @ 2.90GHz\n  WORD_SIZE: 64\n  LIBM: libopenlibm\n  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)","category":"page"},{"location":"man/VCModel_example/#Demo-data-1","page":"VCModel","title":"Demo data","text":"","category":"section"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"For demonstration, we generate a random data set. We use the following distribution to generate response Y of size 100 times 3:","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Y sim textNormal(Xbeta Sigma_1 otimes V_1 + cdots + Sigma_10otimes V_10 + Sigma_0 otimes I_n)","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"where otimes indicates Kronecker product and each Sigma_i indicates variance component for i-th group, i=01ldots 10 We set  ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Sigma_i = begincases 15 mathbfI_100  text if  i=1410 \n                            mathbfI_100  text if  i=0  \n                                mathbf0 text else  endcases","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Define Omega = textVar(Y) = Sigma_1 otimes V_1 + cdots + Sigma_10 otimes V_10 + Sigma_0otimes I_n The covariate matrix X is generated using standard normal distribution. ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"using LinearAlgebra, Random\n\n## generate data from a d-variate response variance component model\nRandom.seed!(123)\nn = 100          # no. observations\nd = 3            # no. categories\nm = 11           # no. variance components\np = 4            # no. covariates\nX = randn(n, p)  # n-by-p covariate matrix \nβ = ones(p, d)   # p-by-d mean component regression coefficient \n\n# a vector of d-by-d variance component parameters \nΣ = [zeros(d, d) for i in 1:m]\nfor i in [1, 4, 10]\n  Σ[i] = 1.5 * Matrix{Float64}(I, d, d)\nend\nΣ[end] = Matrix{Float64}(I, d, d)\n\n# a vector of covariance matrices \nV  = Array{Matrix{Float64}}(undef, m)\nfor i = 1:(m - 1)\n  Vi = randn(n, 50)\n  V[i] =  Vi * Vi'\n  V[i] ./= norm(V[i])\nend\nV[end] = Matrix(I, n, n) ./ √n\n\n# form overall nd-by-nd covariance matrix Ω\nΩ = zeros(n*d, n*d)\nfor i = 1:m\n    Ω .+= kron(Σ[i], V[i])\nend\nΩchol = cholesky!(Symmetric(Ω))\n\n# n-by-d responses\nY = X * β + reshape(Ωchol.L * randn(n*d), n, d);","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"True variance component parameter vector:","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Σ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"11-element Array{Array{Float64,2},1}:\n [1.5 0.0 0.0; 0.0 1.5 0.0; 0.0 0.0 1.5]\n [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]\n [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]\n [1.5 0.0 0.0; 0.0 1.5 0.0; 0.0 0.0 1.5]\n [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]\n [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]\n [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]\n [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]\n [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]\n [1.5 0.0 0.0; 0.0 1.5 0.0; 0.0 0.0 1.5]\n [1.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0]","category":"page"},{"location":"man/VCModel_example/#Goal-1","page":"VCModel","title":"Goal","text":"","category":"section"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Suppose we wish to select Sigma_i i=1ldots 10 that are associated with response Y This can be achieved by VCSEL.jl package. ","category":"page"},{"location":"man/VCModel_example/#Variance-component-selection-1","page":"VCModel","title":"Variance component selection","text":"","category":"section"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"First load the package.","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"using VCSEL","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"To perform selection, take 2 steps:","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Step 1 (Construct a model). Construct an instance of VCModel, which is the fundamental type for variance component model. It consists of fields ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Y: n-by-d responses. \nX: n-by-p covariate matrix (if exists).\nV=(V[1],...,V[m],I): a vector of n-by-n covariance matrices. The last covariance matrix must be positive definite and usually is a diagonal matrix. All V[i] should have frobenius norm 1. \nΣ=(Σ[1],...,Σ[m]): a vector of initial estimates for d-by-d variance component parameters. When d=1, Σ is a m-by-1 vector. If not supplied, it is set to be a vector of d-by-d identity matrix by default. ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"VCModel can be initialized by  VCModel(Y, V) VCModel(Y, V, Σ) VCModel(Y, X, V) VCModel(Y, X, V, Σ) Let us construct a VCModel using Y, X, and V. Since we do not provide Σ, it is initialized to be a vector of identity matrices. ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"vcm = VCModel(Y, X, V);","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Since we did not set initial estimates of Σ, all elements are identity matrix. ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"vcm.Σ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"11-element Array{Array{Float64,2},1}:\n [1.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0]\n [1.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0]\n [1.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0]\n [1.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0]\n [1.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0]\n [1.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0]\n [1.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0]\n [1.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0]\n [1.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0]\n [1.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0]\n [1.0 0.0 0.0; 0.0 1.0 0.0; 0.0 0.0 1.0]","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Step 2 (Optimize). Call optimization routine vcselect!. ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Required input argument for executing vcselect! is VCModel:","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"vcm: VCModel.","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Keyword Arguments are ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"penfun: penalty function. Default is NoPenalty(). Other options are L1Penalty() and MCPPenalty().\nλ: tuning parameter. Default is 1.0.    \npenwt: penalty weights. Default is (1,...1,0).\nstandardize: logical flag for covariance matrix standardization. Default is false.   If true, V[i] is standardized by its Frobenius norm, and parameter estimates are    returned on the original scale.\nmaxiters: maximum number of iterations. Default is 1000.\ntol: convergence tolerance. Default is 1e-5.\nverbose: display switch. Default is false.\nchecktype: check argument type switch. Default is true.","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"<a id='no-penalty'></a>","category":"page"},{"location":"man/VCModel_example/#No-penalty-1","page":"VCModel","title":"No penalty","text":"","category":"section"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"First, we call vcselect! without specifying any penalty function. By default, it is fit with no penalty (i.e. lambda=0).","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"vcm_nopen = deepcopy(vcm);\nvcm_nopen, final_obj, niters, = vcselect!(vcm_nopen);\n## equivalent to \n# vcselect!(vcm_nopen; penfun=NoPenalty());\n# vcselect!(vcm_nopen; λ=0.0)","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"(VCModel{Float64}([1.860094835353257 2.055403434516128 2.84544587051332; 3.4359556067573895 2.8421454064488842 2.860512418851407; … ; -0.21488508947517132 -0.3336880873733919 0.3849750333444425; -2.7580470886596755 -3.400050457633945 -4.784333938275772], [1.1902678809862768 0.3762642112434747 0.34658945360812454 0.45809880324835406; 2.04817970778924 -0.4052717901213415 1.604313725337457 0.13912437753868148; … ; -0.16371133936712523 0.5752786905523419 -0.17655459673142 -0.045725895200926625; -0.9029858060964956 -0.16600120902535137 -1.2792370363858774 -1.3123821810547711], Array{Float64,2}[[0.092494023125743 0.0030042568249118926 … -0.00922398515864249 0.013285729616217755; 0.0030042568249118926 0.04025705934773749 … 0.003708804177337504 0.003823593679063355; … ; -0.00922398515864249 0.003708804177337504 … 0.039439277698925315 0.001178066910649526; 0.013285729616217755 0.003823593679063355 … 0.001178066910649526 0.06886830969476362], [0.06030328209283304 -0.001024446424453263 … 0.002416656153804365 0.0063790347402901595; -0.001024446424453263 0.05853661106826809 … 0.0006337090856672788 0.007760397505232091; … ; 0.002416656153804365 0.0006337090856672788 … 0.07562956244880668 0.00030815255053525065; 0.0063790347402901595 0.007760397505232091 … 0.00030815255053525065 0.05701901985157344], [0.06322716304318081 -0.008711612549915216 … -0.0015279035339411636 0.022149776654320365; -0.008711612549915216 0.08061523894061923 … 0.009591847741341792 -0.003071120098660378; … ; -0.0015279035339411636 0.009591847741341792 … 0.05416995491912846 -0.0029020331844479843; 0.022149776654320365 -0.003071120098660378 … -0.0029020331844479843 0.05313609004607579], [0.06813121548362011 -0.0070291449197405756 … -0.0026551965249274802 -0.01674818135585094; -0.0070291449197405756 0.054198100753390724 … -0.0028780223522959485 0.0020700994740670414; … ; -0.0026551965249274802 -0.0028780223522959485 … 0.09097697256212886 -0.006540345065276699; -0.01674818135585094 0.0020700994740670414 … -0.006540345065276699 0.06960664355867946], [0.04668688768952539 0.0019236985688410111 … -0.0022665544476031733 -0.010434298910784219; 0.0019236985688410111 0.03392562063763582 … -0.0011424991420148395 -0.0046479249957258875; … ; -0.0022665544476031733 -0.0011424991420148395 … 0.05138535402954277 -0.008839324382598431; -0.010434298910784219 -0.0046479249957258875 … -0.008839324382598431 0.07577857511792184], [0.05231851595188485 0.014000335532918394 … 0.005403566739336403 0.014981202961522474; 0.014000335532918394 0.07607804340530455 … 0.011430157976046337 0.0075580432740531165; … ; 0.005403566739336403 0.011430157976046337 … 0.06158685437162115 -0.0028232842319230655; 0.014981202961522474 0.0075580432740531165 … -0.0028232842319230655 0.05042834747669137], [0.04594010668887232 -0.004714934455660974 … -0.006250982214183923 -0.00021509221778614137; -0.004714934455660974 0.06459426209080153 … 0.006069414224015679 -0.005275293063097298; … ; -0.006250982214183923 0.006069414224015679 … 0.04744617444239548 -0.0120998692083325; -0.00021509221778614137 -0.005275293063097298 … -0.0120998692083325 0.058420597856173144], [0.04285048722707893 -0.0012591896928231185 … 0.006999165863003292 0.012017387482265064; -0.0012591896928231185 0.059491880838477874 … 0.004144130951731809 -0.002486162307852439; … ; 0.006999165863003292 0.004144130951731809 … 0.07122862570553226 -0.003085003761206133; 0.012017387482265064 -0.002486162307852439 … -0.003085003761206133 0.0626023830368834], [0.07096485697673946 0.006867051452544812 … 0.0008340653532862 -0.001026824097285736; 0.006867051452544812 0.038155922687492905 … 0.01495473906894293 0.013816417177780163; … ; 0.0008340653532862 0.01495473906894293 … 0.05601150902491132 0.005010048728031925; -0.001026824097285736 0.013816417177780163 … 0.005010048728031925 0.07912963957940582], [0.0687847964302108 0.007885142255207716 … 0.009553757381870287 0.004674662347806306; 0.007885142255207716 0.04447261880398761 … -0.007746036979892709 0.007364544628645696; … ; 0.009553757381870287 -0.007746036979892709 … 0.06888556697976453 -0.0041497843619061; 0.004674662347806306 0.007364544628645696 … -0.0041497843619061 0.05679457041424945], [0.1 0.0 … 0.0 0.0; 0.0 0.1 … 0.0 0.0; … ; 0.0 0.0 … 0.1 0.0; 0.0 0.0 … 0.0 0.1]], [-0.7739062357131296 -0.9331658620345604 0.19340082517416746; -0.5375502154741546 0.5537854011527692 0.20893333641524464; … ; -0.4343391357754267 -0.5525835604901764 0.18231678530353623; 0.8184761551421919 0.4159096209243484 -1.0062331262125586], [-0.7739062357131296, -0.5375502154741546, -0.20934576787419104, -0.6194109267264994, 0.3150859712402592, -0.5744888057510927, -0.4854963959511227, -0.21783269698124924, 0.04557966075851045, 0.09260303155622232  …  -0.6701201251276538, 0.45207803831996607, 0.2172832895324519, -0.6486962173686432, 0.914863044503496, -0.13625347835227242, 0.27086253928126225, -0.2651767713732077, 0.18231678530353623, -1.0062331262125586], Array{Float64,2}[[0.06241940326515145 0.00836808178072565 … -0.0030137457265758103 -0.001443435257734814; 0.008368081780725647 0.038635968199578145 … 0.003666575671928326 0.008448856049055877; … ; -0.0030137457265758095 0.003666575671928322 … 0.03967729699754013 0.001378766829808455; -0.0014434352577348147 0.008448856049055877 … 0.0013787668298084544 0.0703211596550126], [0.06660585725029884 -0.014685936193412531 … 0.007254765245388391 -0.0004418534194450657; -0.01468593619341254 0.047872391071702436 … -0.0054172329454174805 -0.006071187548481201; … ; 0.007254765245388388 -0.005417232945417477 … 0.07543814690331613 0.0047944599143733965; -0.0004418534194450634 -0.006071187548481201 … 0.004794459914373397 0.056071776854515], [0.08655990797450448 -0.019565799173411332 … -0.014297947276639663 0.007944592505932883; -0.01956579917341135 0.07515122068356131 … -0.0022898866984463724 -0.006927773965642289; … ; -0.014297947276639683 -0.002289886698446372 … 0.05559082524056128 -0.006128610891696554; 0.00794459250593288 -0.006927773965642292 … -0.006128610891696553 0.06345397760520183], [0.07693692121541147 -0.008593123943048885 … 0.009032480785038398 -0.015568892907706014; -0.008593123943048878 0.054124597646746965 … 0.0036505871452616415 0.00673509476082784; … ; 0.009032480785038394 0.003650587145261638 … 0.08923463245815301 -0.005672095032390929; -0.015568892907706014 0.0067350947608278335 … -0.00567209503239093 0.05862887040843395], [0.0560490317307929 0.011020795144204664 … -0.007949478862943551 -0.009257714844321491; 0.011020795144204681 0.0648728736259175 … -0.013464798197077268 0.0020818985821961992; … ; -0.007949478862943551 -0.01346479819707726 … 0.049326973965246296 -0.009263088922149193; -0.00925771484432149 0.0020818985821962 … -0.009263088922149195 0.07111614823298519], [0.05875682215895067 -0.0002824331753445289 … 0.004814639991158207 -0.009719904042422954; -0.00028243317534452797 0.05904965894971886 … -0.007411700262533293 0.0030982013374564283; … ; 0.004814639991158213 -0.0074117002625333 … 0.0634185744725271 0.0008653317260022915; -0.009719904042422955 0.003098201337456423 … 0.0008653317260022916 0.06035303149234789], [0.09899317365897248 0.013628458771606613 … -0.0060653796908782965 -0.006728345989607653; 0.013628458771606608 0.042735710079710366 … 0.007233960426281893 -0.011637051367206747; … ; -0.0060653796908783 0.00723396042628189 … 0.04879051554917664 -0.011658901228511298; -0.006728345989607648 -0.011637051367206743 … -0.011658901228511298 0.05652715310049563], [0.056514419808843225 0.01686210097175352 … -0.0006838051423139431 0.0034901185682680363; 0.016862100971753537 0.0495023971917447 … 0.0023572017649846995 0.0016872591373905098; … ; -0.0006838051423139423 0.0023572017649847 … 0.07237326648576908 -0.0025907837823756024; 0.0034901185682680367 0.0016872591373905098 … -0.002590783782375603 0.06755464109915836], [0.04714022523257112 0.0034782818633012904 … 0.004090741015128036 0.01185450708755583; 0.0034782818633012896 0.0466599268812482 … 0.004178907656791244 0.006157418318466628; … ; 0.004090741015128045 0.00417890765679124 … 0.058353799386306 0.00398853453579273; 0.011854507087555822 0.006157418318466626 … 0.0039885345357927315 0.07937662102800903], [0.05524857538434973 0.0008429930933155406 … 0.009664865577212562 -0.011038512061464417; 0.0008429930933155428 0.04490901736500925 … 0.004545720039030089 -0.0010412022557864387; … ; 0.009664865577212543 0.004545720039030089 … 0.0676821507105378 -0.000965421160808708; -0.011038512061464412 -0.0010412022557864397 … -0.0009654211608087073 0.06050900327037573], [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.0 0.0; … ; 0.0 0.0 … 1.0 0.0; 0.0 0.0 … 0.0 1.0]], [0.98262373057086 0.9938855069481529 1.0279389406903463; 0.9781630466475704 1.0232304476367446 0.9711430902302547; 0.925410633551665 1.0145769598392573 0.8988391195993317; 0.8685338679504442 1.1075976421283704 1.0209845293559523], Array{Float64,2}[[1.040392519682894 -0.9331650013274756 0.2698792614971673; -0.9331650013274755 1.8323672344949145 0.5027515826645772; 0.2698792614971673 0.5027515826645772 0.6285554861339957], [1.022164010367449 -0.40348987265201536 -0.32127925630485177; -0.40348987265201547 0.15944226901597186 0.12680764831035088; -0.3212792563048518 0.12680764831035088 0.10098342437882002], [0.04652475933325329 -0.15955065387098033 -0.09119883427438784; -0.15955065387098036 0.558496540875567 0.31799201475835637; -0.09119883427438785 0.31799201475835637 0.18118920760059967], [0.3345667575960278 0.8714891952837133 -0.4085346910999654; 0.8714891952837132 2.283405973643672 -1.2403652975256347; -0.4085346910999654 -1.240365297525635 2.8288133260307773], [0.9234821871351467 -0.497494817604588 -0.02358520286780985; -0.4974948176045879 0.26800851998962266 0.012705734095699441; -0.02358520286780985 0.012705734095699441 0.0006023662559145914], [0.5212700918589973 -0.3487119661493774 0.2065217351077744; -0.3487119661493774 0.8619411813355193 0.2777147022780176; 0.20652173510777444 0.27771470227801753 0.35698431616276477], [0.33030923192851197 0.22713027189037435 -0.29044157849611035; 0.22713027189037435 0.1561814210895782 -0.1997161083473995; -0.29044157849611035 -0.19971610834739953 0.2553858951287951], [3.419782142743309e-6 6.002093929935393e-7 -1.9457790107734202e-6; 6.002093929935392e-7 1.053433698531686e-7 -3.415055568032594e-7; -1.945779010773421e-6 -3.415055568032595e-7 1.1071046984866846e-6], [0.7851702204334691 -0.7140482003169591 -0.3017915695539358; -0.7140482003169593 0.6638398237187997 0.3558976732958973; -0.3017915695539358 0.3558976732958973 0.5743516343478428], [1.1501682161353104 1.5018053897265098 -0.176709466164187; 1.5018053897265093 2.145159095282665 -0.4819296518748778; -0.17670946616418703 -0.4819296518748778 0.5482146165881027], [0.006411213649655886 -0.007445486023000897 0.0032555988762958134; -0.007445486023000895 0.008691059081563203 -0.0038087041845123707; 0.0032555988762958126 -0.0038087041845123702 0.0016707029386655427]], [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], [0.3848469845567399 0.008141961190454624 … -0.005529245406561242 0.003926477923160772; 0.008141961190454631 0.3102407474880889 … -0.003931164722746072 0.004407360260288251; … ; -0.005529245406561234 -0.003931164722746074 … 0.40247824636719653 -0.016717572104818487; 0.003926477923160771 0.004407360260288252 … -0.016717572104818494 0.34366732756355295], [0.6203603666875729 0.0 … 0.0 0.0; 0.013124566989875248 0.556837941621633 … 0.0 0.0; … ; -0.008912957215633814 -0.006849723651344332 … 0.4056515458484372 0.0; 0.006329350058460831 0.007765796757401873 … 0.02180873377720742 0.41010803337524115], [4.845482863860569 -0.3775566261089849 … 0.2891952023622961 -0.18855175504814856; -0.3775566261089849 6.070160173131242 … 0.21055833488380835 -0.6744981262187408; … ; 0.2891952023622961 0.21055833488380835 … 6.094248208275274 -0.31965445582375296; -0.18855175504814856 -0.6744981262187408 … -0.31965445582375296 5.945706223337202], [-4.580605904115147, 1.779020570112972, 0.6083840301175939, -1.7203570410064837, 0.4491502822379354, -3.862735500892266, -1.5463630481224813, -1.2710195640978095, -0.2103826829527149, 0.8544153865463257  …  -2.6487706440503493, 0.7703599984465104, 0.6354738069645389, -3.391724808332392, 3.4336816117618016, -1.1096566132646022, 1.7388650455128654, 1.586013076250488, -1.695383318542189, -2.1286884665345625], [-4.580605904115147 -4.011610932575097 -0.9165493273250832; 1.779020570112972 4.593548341736832 -2.864638955840119; … ; -1.312354692402212 0.5312239990161676 -1.695383318542189; 1.2440718403200206 -0.29911004206217506 -2.1286884665345625], Array{Float64,2}[[0.06241940326515145 0.00836808178072565 … -0.0030137457265758103 -0.001443435257734814; 0.008368081780725647 0.038635968199578145 … 0.003666575671928326 0.008448856049055877; … ; -0.0030137457265758095 0.003666575671928322 … 0.03967729699754013 0.001378766829808455; -0.0014434352577348147 0.008448856049055877 … 0.0013787668298084544 0.0703211596550126], [0.06660585725029884 -0.014685936193412531 … 0.007254765245388391 -0.0004418534194450657; -0.01468593619341254 0.047872391071702436 … -0.0054172329454174805 -0.006071187548481201; … ; 0.007254765245388388 -0.005417232945417477 … 0.07543814690331613 0.0047944599143733965; -0.0004418534194450634 -0.006071187548481201 … 0.004794459914373397 0.056071776854515], [0.08655990797450448 -0.019565799173411332 … -0.014297947276639663 0.007944592505932883; -0.01956579917341135 0.07515122068356131 … -0.0022898866984463724 -0.006927773965642289; … ; -0.014297947276639683 -0.002289886698446372 … 0.05559082524056128 -0.006128610891696554; 0.00794459250593288 -0.006927773965642292 … -0.006128610891696553 0.06345397760520183], [0.07693692121541147 -0.008593123943048885 … 0.009032480785038398 -0.015568892907706014; -0.008593123943048878 0.054124597646746965 … 0.0036505871452616415 0.00673509476082784; … ; 0.009032480785038394 0.003650587145261638 … 0.08923463245815301 -0.005672095032390929; -0.015568892907706014 0.0067350947608278335 … -0.00567209503239093 0.05862887040843395], [0.0560490317307929 0.011020795144204664 … -0.007949478862943551 -0.009257714844321491; 0.011020795144204681 0.0648728736259175 … -0.013464798197077268 0.0020818985821961992; … ; -0.007949478862943551 -0.01346479819707726 … 0.049326973965246296 -0.009263088922149193; -0.00925771484432149 0.0020818985821962 … -0.009263088922149195 0.07111614823298519], [0.05875682215895067 -0.0002824331753445289 … 0.004814639991158207 -0.009719904042422954; -0.00028243317534452797 0.05904965894971886 … -0.007411700262533293 0.0030982013374564283; … ; 0.004814639991158213 -0.0074117002625333 … 0.0634185744725271 0.0008653317260022915; -0.009719904042422955 0.003098201337456423 … 0.0008653317260022916 0.06035303149234789], [0.09899317365897248 0.013628458771606613 … -0.0060653796908782965 -0.006728345989607653; 0.013628458771606608 0.042735710079710366 … 0.007233960426281893 -0.011637051367206747; … ; -0.0060653796908783 0.00723396042628189 … 0.04879051554917664 -0.011658901228511298; -0.006728345989607648 -0.011637051367206743 … -0.011658901228511298 0.05652715310049563], [0.056514419808843225 0.01686210097175352 … -0.0006838051423139431 0.0034901185682680363; 0.016862100971753537 0.0495023971917447 … 0.0023572017649846995 0.0016872591373905098; … ; -0.0006838051423139423 0.0023572017649847 … 0.07237326648576908 -0.0025907837823756024; 0.0034901185682680367 0.0016872591373905098 … -0.002590783782375603 0.06755464109915836], [0.04714022523257112 0.0034782818633012904 … 0.004090741015128036 0.01185450708755583; 0.0034782818633012896 0.0466599268812482 … 0.004178907656791244 0.006157418318466628; … ; 0.004090741015128045 0.00417890765679124 … 0.058353799386306 0.00398853453579273; 0.011854507087555822 0.006157418318466626 … 0.0039885345357927315 0.07937662102800903], [0.05524857538434973 0.0008429930933155406 … 0.009664865577212562 -0.011038512061464417; 0.0008429930933155428 0.04490901736500925 … 0.004545720039030089 -0.0010412022557864387; … ; 0.009664865577212543 0.004545720039030089 … 0.0676821507105378 -0.000965421160808708; -0.011038512061464412 -0.0010412022557864397 … -0.0009654211608087073 0.06050900327037573], [1.0 0.0 … 0.0 0.0; 0.0 1.0 … 0.0 0.0; … ; 0.0 0.0 … 1.0 0.0; 0.0 0.0 … 0.0 1.0]], [22.65238240259132 0.0 0.0; 5.44246187975408 19.66269210939686 0.0; 0.982029735412937 -4.236453466497337 25.53900914281947], [0.04414546700772652 0.0 0.0; -0.012219080684209665 0.05085773577882028 0.0; -0.0037244094896317515 0.008436366103066546 0.03915578691435487], [4.845346353979097 -0.0 … 0.0 -0.0; -0.0 6.069931014098225 … 0.0 -0.0; … ; 0.0 0.0 … 6.094037359307323 -0.0; -0.0 -0.0 … -0.0 5.945525218247111], [0.00018313684140736086 0.0002370090926309132 -0.3040692016166241; -18.644320281880933 40.31687534372334 17.410059430845852; 9.69165402535091 -14.463125929012858 7.518253159868553], [-0.04268161146395569 0.05868066603644307 -0.029751268011123176; -0.5395838378275681 0.8095362203763004 -0.42145996789211465; … ; -0.300993237741671 0.44890369610862413 -0.23330853970660945; 0.05542054139771081 -0.08084670178978905 0.04174703191105588], [0.4046418778695242 0.02129954133107345 … -0.0009967114922605036 0.00924458784064161; 0.02129954133107345 0.29767485575707203 … -0.0014213739070171934 -0.004295342205860746; … ; -0.0009967114922605036 -0.0014213739070171923 … 0.4038340933390354 -0.021756408464620357; 0.00924458784064161 -0.004295342205860747 … -0.021756408464620357 0.3652959800244595]), 224.08353228995801, 276, Float64[])","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"The output of vcselect! contains ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"fitted model ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"vcm_nopen;","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Parameter estimates can be accessed as below:","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"# variance components\nvcm_nopen.Σ ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"11-element Array{Array{Float64,2},1}:\n [1.040392519682894 -0.9331650013274756 0.2698792614971673; -0.9331650013274755 1.8323672344949145 0.5027515826645772; 0.2698792614971673 0.5027515826645772 0.6285554861339957]                          \n [1.022164010367449 -0.40348987265201536 -0.32127925630485177; -0.40348987265201547 0.15944226901597186 0.12680764831035088; -0.3212792563048518 0.12680764831035088 0.10098342437882002]                 \n [0.04652475933325329 -0.15955065387098033 -0.09119883427438784; -0.15955065387098036 0.558496540875567 0.31799201475835637; -0.09119883427438785 0.31799201475835637 0.18118920760059967]                \n [0.3345667575960278 0.8714891952837133 -0.4085346910999654; 0.8714891952837132 2.283405973643672 -1.2403652975256347; -0.4085346910999654 -1.240365297525635 2.8288133260307773]                         \n [0.9234821871351467 -0.497494817604588 -0.02358520286780985; -0.4974948176045879 0.26800851998962266 0.012705734095699441; -0.02358520286780985 0.012705734095699441 0.0006023662559145914]              \n [0.5212700918589973 -0.3487119661493774 0.2065217351077744; -0.3487119661493774 0.8619411813355193 0.2777147022780176; 0.20652173510777444 0.27771470227801753 0.35698431616276477]                      \n [0.33030923192851197 0.22713027189037435 -0.29044157849611035; 0.22713027189037435 0.1561814210895782 -0.1997161083473995; -0.29044157849611035 -0.19971610834739953 0.2553858951287951]                 \n [3.419782142743309e-6 6.002093929935393e-7 -1.9457790107734202e-6; 6.002093929935392e-7 1.053433698531686e-7 -3.415055568032594e-7; -1.945779010773421e-6 -3.415055568032595e-7 1.1071046984866846e-6]   \n [0.7851702204334691 -0.7140482003169591 -0.3017915695539358; -0.7140482003169593 0.6638398237187997 0.3558976732958973; -0.3017915695539358 0.3558976732958973 0.5743516343478428]                       \n [1.1501682161353104 1.5018053897265098 -0.176709466164187; 1.5018053897265093 2.145159095282665 -0.4819296518748778; -0.17670946616418703 -0.4819296518748778 0.5482146165881027]                        \n [0.006411213649655886 -0.007445486023000897 0.0032555988762958134; -0.007445486023000895 0.008691059081563203 -0.0038087041845123707; 0.0032555988762958126 -0.0038087041845123702 0.0016707029386655427]","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"# mean regression coefficients \nvcm_nopen.β ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"4×3 Array{Float64,2}:\n 0.982624  0.993886  1.02794 \n 0.978163  1.02323   0.971143\n 0.925411  1.01458   0.898839\n 0.868534  1.1076    1.02098","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"# estimated nd-by-nd overall covariance matrix \nvcm_nopen.Ωest ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"300×300 Array{Float64,2}:\n  0.404642      0.0212995    -0.0439677    …  -0.000996711   0.00924459 \n  0.0212995     0.297675     -0.0225235       -0.00142137   -0.00429534 \n -0.0439677    -0.0225235     0.355902         0.00217228    0.0148259  \n  0.0141434     0.0137725    -0.00278179       0.00270504    0.00310854 \n  0.00204811   -0.028574      0.00272162      -0.00533976   -0.000170068\n  0.00778168   -0.0246549     0.0214009    …  -0.00351548    0.00481182 \n  0.0214074     0.00720804   -0.0188076        0.00458159    0.00200145 \n  0.0212846    -0.0168359     0.0235598       -0.00940152   -0.00161028 \n  0.00027726   -0.00359327    0.0120295        0.0124774    -0.00456738 \n  0.0333097     0.00505554   -0.00798919      -0.00368395    0.00712723 \n  0.0337032     0.0174631     0.0144735    …  -0.00782776    0.00526143 \n  0.00168991    0.0105267    -0.0387361        0.000699345  -0.0126745  \n  0.0497327    -0.000448481   0.00476156      -0.00570844    0.00561756 \n  ⋮                                        ⋱                            \n -0.00359702    0.00150652    0.00651356       0.0234858     0.00137043 \n -0.00761681   -0.00736318   -0.00279967      -0.0297263     0.00250212 \n -0.00520933    0.0135742     0.00147882   …  -0.0503342    -0.0258913  \n -0.00712035    0.0146343    -0.00587661      -0.0074037    -0.0101847  \n  4.87859e-5   -0.011713      0.00247226      -0.0161755    -0.0121719  \n -0.000212575  -0.00372149    0.000234091     -0.0273435    -0.0144336  \n -0.00261881   -0.00187509    0.00823666       0.0190836     0.0176459  \n -0.0168559     0.0124464     0.00468057   …   0.0388293    -0.0217836  \n -0.0128125    -0.00522231    0.00236304       0.0355992    -0.0185136  \n  0.00686613   -0.000792507  -0.0174963       -0.00963686   -0.0101977  \n -0.000996711  -0.00142137    0.00217228       0.403834     -0.0217564  \n  0.00924459   -0.00429534    0.0148259       -0.0217564     0.365296","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"final objective value","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"final_obj","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"224.08353228995801","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"number of iterations to convergence","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"niters","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"276","category":"page"},{"location":"man/VCModel_example/#Selection-at-specific-regularization-parameter-1","page":"VCModel","title":"Selection at specific regularization parameter","text":"","category":"section"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Now we specify penalty function penfun=L1Penalty() and regularization parameter value λ=2.0. ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"vcm_L1 = deepcopy(vcm)\nvcm_L1, obj_L1, niters_L1, = vcselect!(vcm_L1; penfun=L1Penalty(), λ=2.0);","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"vcm_L1.Σ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"11-element Array{Array{Float64,2},1}:\n [0.723344411461242 -0.5371552915924754 0.2653186252185347; -0.5371552915924754 1.4582908604350255 0.5524782606904559; 0.2653186252185347 0.5524782606904559 0.6325518383029696]               \n [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]                                                                                                                                                       \n [0.057805236800426145 -0.17358417446955493 -0.10897979851692789; -0.17358417446955496 0.5212600756188006 0.32725770158442874; -0.1089797985169279 0.32725770158442874 0.20545912804073208]    \n [0.2913469143855766 0.7770359938857069 -0.4247453010516808; 0.7770359938857069 2.0730922239946166 -1.1687134116436118; -0.42474530105168085 -1.168713411643612 2.474665577830677]             \n [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]                                                                                                                                                       \n [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]                                                                                                                                                       \n [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]                                                                                                                                                       \n [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]                                                                                                                                                       \n [0.06642785873460767 -0.0838719932120693 -0.14527412016886251; -0.0838719932120693 0.11376962987090039 0.22138651825918587; -0.14527412016886251 0.22138651825918582 0.5007706483133327]      \n [1.2155752663079227 0.7538241005012988 -0.17876565086814275; 0.7538241005012989 2.129358393362267 -0.13275367534940646; -0.17876565086814278 -0.1327536753494065 0.579030827031327]           \n [0.182702105774506 -0.07290881165278217 -0.017726528851982094; -0.07290881165278217 0.111382106709641 -0.006119116547148225; -0.017726528851982098 -0.006119116547148225 0.032420377042649794]","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"vcm_L1.β","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"4×3 Array{Float64,2}:\n 1.03872   0.939329  0.975904\n 0.993807  0.997929  0.969196\n 0.951591  1.03716   0.887175\n 0.910584  1.05514   1.07108","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"obj_L1","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"246.1242780263884","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"niters_L1","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"135","category":"page"},{"location":"man/VCModel_example/#Obtain-solution-path-1","page":"VCModel","title":"Obtain solution path","text":"","category":"section"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"vcselectpath! function to compute regularization path for a given penalty at a grid of the regularization parameter lambda values. vcselectpath! provides options for users to customize. Keyword arguments for the function are ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"penfun: penalty function (e.g. NoPenalty(), L1Penalty(), MCPPenalty()). Default is NoPenalty().\npenwt: weights for penalty term. Default is (1,1,...1,0).\nnλ: number of λ values in the sequence. Default is 100. \nλpath: user-provided sequence of λ values in ascending order. Typically the program computes its own λ sequence based on nλ, but supplying λpath overrides this.\nmaxiter: maximum number of iteration for MM loop. Default is 1000.\nstandardize: logical flag for covariance matrix standardization. Default is false. If true, V[i] is standardized by its Frobenius norm.\ntol: convergence tolerance. Default is 1e-6.","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"When called without any penalty, vcselectpath! returns the same output as vcselect! with penfun=NoPenalty() (compare the output). ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"vcmpath_np = deepcopy(vcm)\nΣ̂path_np, β̂path_np, λpath_np, objpath_np, niterspath_np = vcselectpath!(vcmpath_np)","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"(Array{Float64,2}[[1.040392519682894 -0.9331650013274756 0.2698792614971673; -0.9331650013274755 1.8323672344949145 0.5027515826645772; 0.2698792614971673 0.5027515826645772 0.6285554861339957], [1.022164010367449 -0.40348987265201536 -0.32127925630485177; -0.40348987265201547 0.15944226901597186 0.12680764831035088; -0.3212792563048518 0.12680764831035088 0.10098342437882002], [0.04652475933325329 -0.15955065387098033 -0.09119883427438784; -0.15955065387098036 0.558496540875567 0.31799201475835637; -0.09119883427438785 0.31799201475835637 0.18118920760059967], [0.3345667575960278 0.8714891952837133 -0.4085346910999654; 0.8714891952837132 2.283405973643672 -1.2403652975256347; -0.4085346910999654 -1.240365297525635 2.8288133260307773], [0.9234821871351467 -0.497494817604588 -0.02358520286780985; -0.4974948176045879 0.26800851998962266 0.012705734095699441; -0.02358520286780985 0.012705734095699441 0.0006023662559145914], [0.5212700918589973 -0.3487119661493774 0.2065217351077744; -0.3487119661493774 0.8619411813355193 0.2777147022780176; 0.20652173510777444 0.27771470227801753 0.35698431616276477], [0.33030923192851197 0.22713027189037435 -0.29044157849611035; 0.22713027189037435 0.1561814210895782 -0.1997161083473995; -0.29044157849611035 -0.19971610834739953 0.2553858951287951], [3.419782142743309e-6 6.002093929935393e-7 -1.9457790107734202e-6; 6.002093929935392e-7 1.053433698531686e-7 -3.415055568032594e-7; -1.945779010773421e-6 -3.415055568032595e-7 1.1071046984866846e-6], [0.7851702204334691 -0.7140482003169591 -0.3017915695539358; -0.7140482003169593 0.6638398237187997 0.3558976732958973; -0.3017915695539358 0.3558976732958973 0.5743516343478428], [1.1501682161353104 1.5018053897265098 -0.176709466164187; 1.5018053897265093 2.145159095282665 -0.4819296518748778; -0.17670946616418703 -0.4819296518748778 0.5482146165881027], [0.006411213649655886 -0.007445486023000897 0.0032555988762958134; -0.007445486023000895 0.008691059081563203 -0.0038087041845123707; 0.0032555988762958126 -0.0038087041845123702 0.0016707029386655427]], [0.98262373057086 0.9938855069481529 1.0279389406903463; 0.9781630466475704 1.0232304476367446 0.9711430902302547; 0.925410633551665 1.0145769598392573 0.8988391195993317; 0.8685338679504442 1.1075976421283704 1.0209845293559523], [0.0], 224.08353228995801, 276)","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Σ̂path_np","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"11-element Array{Array{Float64,2},1}:\n [1.040392519682894 -0.9331650013274756 0.2698792614971673; -0.9331650013274755 1.8323672344949145 0.5027515826645772; 0.2698792614971673 0.5027515826645772 0.6285554861339957]                          \n [1.022164010367449 -0.40348987265201536 -0.32127925630485177; -0.40348987265201547 0.15944226901597186 0.12680764831035088; -0.3212792563048518 0.12680764831035088 0.10098342437882002]                 \n [0.04652475933325329 -0.15955065387098033 -0.09119883427438784; -0.15955065387098036 0.558496540875567 0.31799201475835637; -0.09119883427438785 0.31799201475835637 0.18118920760059967]                \n [0.3345667575960278 0.8714891952837133 -0.4085346910999654; 0.8714891952837132 2.283405973643672 -1.2403652975256347; -0.4085346910999654 -1.240365297525635 2.8288133260307773]                         \n [0.9234821871351467 -0.497494817604588 -0.02358520286780985; -0.4974948176045879 0.26800851998962266 0.012705734095699441; -0.02358520286780985 0.012705734095699441 0.0006023662559145914]              \n [0.5212700918589973 -0.3487119661493774 0.2065217351077744; -0.3487119661493774 0.8619411813355193 0.2777147022780176; 0.20652173510777444 0.27771470227801753 0.35698431616276477]                      \n [0.33030923192851197 0.22713027189037435 -0.29044157849611035; 0.22713027189037435 0.1561814210895782 -0.1997161083473995; -0.29044157849611035 -0.19971610834739953 0.2553858951287951]                 \n [3.419782142743309e-6 6.002093929935393e-7 -1.9457790107734202e-6; 6.002093929935392e-7 1.053433698531686e-7 -3.415055568032594e-7; -1.945779010773421e-6 -3.415055568032595e-7 1.1071046984866846e-6]   \n [0.7851702204334691 -0.7140482003169591 -0.3017915695539358; -0.7140482003169593 0.6638398237187997 0.3558976732958973; -0.3017915695539358 0.3558976732958973 0.5743516343478428]                       \n [1.1501682161353104 1.5018053897265098 -0.176709466164187; 1.5018053897265093 2.145159095282665 -0.4819296518748778; -0.17670946616418703 -0.4819296518748778 0.5482146165881027]                        \n [0.006411213649655886 -0.007445486023000897 0.0032555988762958134; -0.007445486023000895 0.008691059081563203 -0.0038087041845123707; 0.0032555988762958126 -0.0038087041845123702 0.0016707029386655427]","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"β̂path_np","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"4×3 Array{Float64,2}:\n 0.982624  0.993886  1.02794 \n 0.978163  1.02323   0.971143\n 0.925411  1.01458   0.898839\n 0.868534  1.1076    1.02098","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Now let us call vcselectpath! with penfun=L1Penalty(). Since we do not provide nλ or λpath, a grid of 100 λ values is generated internally. ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"vcm_path = deepcopy(vcm)\nΣ̂path, β̂path, λpath, objpath, niterspath = vcselectpath!(vcm_path; \n    penfun=L1Penalty());","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Output of vcselectpath! include","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"variance component parameters path: (ij)-th element corresponds to i-th variance component matrix at λpath[j], i=1ldots 10  j=1ldots 100. The last row is for the residual variance component Sigma_0 ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Σ̂path","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"11×100 Array{Array{Float64,2},2}:\n [0.964484 -0.878534 0.291246; -0.878534 1.87357 0.409527; 0.291246 0.409527 0.512356]                       …  [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]                                                                           \n [0.88697 -0.168999 -0.324029; -0.168999 0.0419948 0.0591281; -0.324029 0.0591281 0.11907]                      [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]                                                                           \n [0.0319492 -0.13754 -0.0880763; -0.13754 0.62292 0.396603; -0.0880763 0.396603 0.252673]                       [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]                                                                           \n [0.428464 0.897827 -0.297535; 0.897827 2.06265 -1.2974; -0.297535 -1.2974 2.71189]                             [2.46063e-16 1.17441e-15 -2.61995e-15; 1.17441e-15 5.6052e-15 -1.25045e-14; -2.61995e-15 -1.25045e-14 2.78959e-14]\n [0.856367 -0.562249 -0.033135; -0.562249 0.369145 0.0217548; -0.033135 0.0217548 0.00128208]                   [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]                                                                           \n [0.453486 -0.451398 0.0629725; -0.451398 0.87901 0.314005; 0.0629725 0.314005 0.33909]                      …  [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]                                                                           \n [0.339107 0.148511 -0.247879; 0.148511 0.0650403 -0.108558; -0.247879 -0.108558 0.181193]                      [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]                                                                           \n [5.27456e-6 1.29991e-6 -2.92758e-6; 1.29991e-6 3.20361e-7 -7.21499e-7; -2.92758e-6 -7.21499e-7 1.62492e-6]     [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]                                                                           \n [0.797038 -0.658322 -0.322121; -0.658322 0.568001 0.380002; -0.322121 0.380002 0.665504]                       [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]                                                                           \n [1.08826 1.38038 -0.0680152; 1.38038 2.21767 -0.54062; -0.0680152 -0.54062 0.478122]                           [0.0 0.0 0.0; 0.0 0.0 0.0; 0.0 0.0 0.0]                                                                           \n [0.0702947 -0.0755383 0.0347578; -0.0755383 0.0811913 -0.0373599; 0.0347578 -0.0373599 0.0171911]           …  [3.33218 -0.315165 -0.464628; -0.315165 5.31693 0.035669; -0.464628 0.035669 3.23267]","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Let's take a trace of each matrix:","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"tr.(Σ̂path)","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"11×100 Array{Float64,2}:\n 3.35041     3.33039      3.30816   …   0.0        0.0        0.0        \n 1.04804     1.03808      1.02683       0.0        0.0        0.0        \n 0.907542    0.898144     0.885295      0.0        0.0        0.0        \n 5.203       5.17787      5.15092       0.825608   0.771447   3.37472e-14\n 1.22679     1.21322      1.19014       0.0        0.0        0.0        \n 1.67159     1.66089      1.64623   …   0.0        0.0        0.0        \n 0.585341    0.580511     0.57497       0.0        0.0        0.0        \n 7.21984e-6  5.01809e-11  0.0           0.0        0.0        0.0        \n 2.03054     2.01968      2.00984       0.0        0.0        0.0        \n 3.78405     3.7625       3.7398        0.0        0.0        0.0        \n 0.168677    0.172197     0.185863  …  10.6502    10.7018    11.8818","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"mean regression coefficient path: j-th element in β̂path corresponds to p-by-d coefficients at λpath[j].","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"β̂path","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"100-element Array{Array{Float64,2},1}:\n [0.970056800145968 0.9851818306585971 1.0277546485318616; 0.9908578041843322 1.0061729340146155 0.9659683457092927; 0.9303366182743511 1.012214164262387 0.8975771117837166; 0.8847476898983968 1.099588226998865 1.0228019849814547]   \n [0.9700547931669993 0.9851779231715498 1.0277510875539613; 0.9908802640938679 1.0061577572436342 0.9658958974324092; 0.9303930452096053 1.0121340331688236 0.8975326423167677; 0.8849021700106763 1.0994636400779647 1.0228591571458627]\n [0.9700216041732665 0.9852773221641971 1.0276975105242259; 0.9908827323213368 1.0062150636206364 0.9657504293012046; 0.930394337310919 1.0120439159067223 0.8974129497586784; 0.8853887862472509 1.0992277983182828 1.022970924868811]  \n [0.9700017757626326 0.9854217116375406 1.0276096831691022; 0.9909047780954122 1.0063277583222079 0.9655654879681046; 0.9303376378895787 1.0120129019383362 0.8972854011254249; 0.8860082791378023 1.0989637058316624 1.0230784657302048]\n [0.9700026714875383 0.9855768277691198 1.0275064563345253; 0.9909338661127843 1.0064886197357088 0.9653616812796909; 0.9302476537284565 1.0120120799104022 0.8971505760036749; 0.8866755408606781 1.098707093301289 1.0231731592976794] \n [0.9700240363399607 0.9857146649221155 1.0274040394346802; 0.9909608821507079 1.0066785547337287 0.9651604824904629; 0.9301478683330154 1.0120156015965227 0.8970128900599386; 0.8873142398601757 1.098484911990389 1.02325077916745]   \n [0.970060098868174 0.9858441479176439 1.0273017079137612; 0.9909878301514629 1.006894598395578 0.9649573116010493; 0.930038683482266 1.0120189356569202 0.8968683534622994; 0.8879483589393866 1.098285458493899 1.0233152199984756]    \n [0.9701081308813002 0.9859542440291951 1.027205842057627; 0.9910149662228955 1.0071168820271392 0.9647628993089208; 0.9299318825402689 1.012016623635911 0.8967251292428947; 0.8885425749947786 1.0981124372248665 1.0233654434108503]  \n [0.9701668759004295 0.9860655088660634 1.0271075638073328; 0.9910475723116167 1.007360208634844 0.9645605712400513; 0.9298141868018878 1.01201433788962 0.8965736187204383; 0.8891610721208365 1.0979462131087079 1.0234050039241656]   \n [0.9702371099886957 0.9861733608439256 1.0270087241613148; 0.9910886799265735 1.0076149747736387 0.9643536567363287; 0.929689988328826 1.0120135409237598 0.8964194416706712; 0.8897907958146413 1.0977872644460216 1.0234324728192459] \n [0.9703205212202832 0.9862733266997803 1.026909303639684; 0.9911377979236425 1.007876014812667 0.964144885932421; 0.9295617111063851 1.01201466880563 0.8962653271741763; 0.8904237441585969 1.0976354889160724 1.0234482136204597]     \n [0.9704203097195049 0.9863608672002531 1.026807600581066; 0.9911927713718501 1.008141186389551 0.9639363475030869; 0.9294300395879176 1.012019240400032 0.8961129157428468; 0.8910550738118972 1.0974905633314238 1.0234535974005405]   \n [0.9705525624790936 0.9864412460855143 1.0266901028995004; 0.991254315984135 1.0084342469240672 0.9637135368151316; 0.9292794511045213 1.012038253652813 0.8959548758415617; 0.8917352664999736 1.097344259492438 1.023449077834584]    \n ⋮                                                                                                                                                                                                                                       \n [1.0270086224007002 0.977198763278347 1.0048747729603686; 1.032391225774656 1.0065628046188708 0.9678648933289815; 0.9215950703744944 1.022566456718345 0.9071331446315464; 0.9303860148451067 1.1262342100944394 1.0136172738294262]   \n [1.0269889487810646 0.9770984833813561 1.0051079714316673; 1.0324046493051526 1.0066244419131172 0.9677310020111419; 0.9215690006475311 1.022450221852565 0.9073802725346131; 0.9303705170319064 1.1261608849600842 1.0137798968645877] \n [1.0269682733475587 0.9769954999531404 1.005344111774604; 1.032417852100495 1.0066858098188378 0.9675965459706555; 0.921543716585951 1.0223350882660023 0.9076288810464547; 0.9303550185026275 1.1260873518605627 1.0139432878587835]   \n [1.026946509169104 0.9768888265287958 1.0055862448748671; 1.0324310634871114 1.006747790618284 0.9674598724010764; 0.9215186845469215 1.0222192289169363 0.907881975827697; 0.9303393109359849 1.1260126705051663 1.0141094643897697]   \n [1.0269236032721383 0.9767777486889849 1.0058366500620735; 1.032444454361816 1.006811027038899 0.9673198046563743; 0.9214934988692552 1.0221012927356063 0.9081417010884496; 0.9303232436355087 1.1259361662624003 1.0142798649288771]  \n [1.026896845159577 0.9766488717195425 1.0061258907515698; 1.0324596640923442 1.006883169184882 0.967159535342927; 0.9214650282245407 1.0219669219675172 0.9084392137988487; 0.9303048760613988 1.1258486233100542 1.0144749805947635]   \n [1.0268669157612584 0.976505351156532 1.0064470672357912; 1.0324762859890984 1.00696224107712 0.966983524690152; 0.921434002637536 1.0218197196014545 0.908766299891925; 0.9302847134524947 1.125752461759609 1.014689399014444]        \n [1.026834011840215 0.9763479736484885 1.0067986516892178; 1.032494207742169 1.0070476483198068 0.9667931852870184; 0.921400598852995 1.0216607252027052 0.9091203484978029; 0.9302629117544495 1.125648441753558 1.0149214015072279]    \n [1.0267978320516902 0.976175154812784 1.007184395605183; 1.032513583676101 1.007140071293369 0.9665870828625819; 0.9213645026448267 1.021488627799989 0.9095040033913004; 0.930239302552861 1.1255357746267727 1.01517272497518]        \n [1.0267523128225973 0.9759578480004154 1.007669256305491; 1.0325375631869853 1.0072545003551125 0.9663318371415874; 0.9213198362145476 1.0212755123661421 0.9099793339241664; 0.9302100583003226 1.1253962030108373 1.0154840825250626] \n [1.0266916914741222 0.9756685016997297 1.0083147687543301; 1.0325688870480634 1.007403997948564 0.9659983350371754; 0.9212615019880961 1.0209971109750264 0.9106003859586046; 0.930171848527107 1.1252138369319509 1.0158909153690334]  \n [1.0257427490533304 0.9711393881421525 1.0184186295223387; 1.0330034877637368 1.0094782595834286 0.9613709300773792; 0.920484128833113 1.0172868664332446 0.9188774523479109; 0.9296475566660481 1.1227114970135004 1.0214733074805193]","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"grid of lambda values used ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"λpath ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"0.0:0.1269064028253433:12.563733879708987","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"final objective values at each lambda","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"objpath","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"100-element Array{Float64,1}:\n 223.40005049467874\n 224.99712897026978\n 226.58538820287092\n 228.1656708528255 \n 229.73827732323977\n 231.30381424161686\n 232.86211979463877\n 234.4135219704821 \n 235.9575418880073 \n 237.49428062672098\n 239.02376573588506\n 240.5459426422662 \n 242.06017758327576\n   ⋮               \n 276.0384210677173 \n 276.1674326241919 \n 276.2950955955481 \n 276.42130502307646\n 276.5459455857025 \n 276.66861774127557\n 276.78923597163015\n 276.9076205222513 \n 277.023466500422  \n 277.1357503071525 \n 277.24304973634975\n 273.0763363663427","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"number of iterations at each lambda","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"niterspath","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"100-element Array{Int64,1}:\n 215\n  10\n  20\n  22\n  22\n  20\n  19\n  17\n  17\n  17\n  17\n  17\n  19\n   ⋮\n   6\n   7\n   7\n   7\n   7\n   8\n   9\n  10\n  11\n  14\n  19\n 137","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"To get the order in which variance components entered the solution path, we use rankvarcomps function:","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"posvarcomps, zerovarcomps = rankvarcomps(Σ̂path)","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"([4, 10, 1, 9, 2, 7, 6, 5, 3], [8, 11])","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Note that output includes two vectors. The first vector posvarcomps displays indices of variance components in the order they entered the solution path; the second vector zerovarcomps shows indices of those that are zero (except when lambda=0) and residual variance component, in no particular order. ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"posvarcomps","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"9-element Array{Int64,1}:\n  4\n 10\n  1\n  9\n  2\n  7\n  6\n  5\n  3","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"zerovarcomps","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"2-element Array{Int64,1}:\n  8\n 11","category":"page"},{"location":"man/VCModel_example/#Visualize/summarize-1","page":"VCModel","title":"Visualize/summarize","text":"","category":"section"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"We can visualize Σ̂path via plotsolpath function.  When variance component parameter is a matrix, plotsolpath calculates its trace and plots norms at each lambda. ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Required arguments of plotsolfunction are","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Σ̂path: solution path generated from vcselectpath!\nλpath: grid of lambda values used for Σ̂path.","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Keyword arguemnts are ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"title: title of the figure. Default is \"Solution Path\".\nxlab: x-axis label. Default is \"lambda\".\nylab: y-axis label. Default is \"sigma^2\" or \"trace(Sigma)\".\nxmin: lower limit for x-axis. Default is minimum of λpath.\nxmax: upper limit for x-axis. Default is maximum of λpath.\nlinewidth: line width. Default is 1.0.\nnranks: no. of ranks to displayed on legend. Default is total number of variance components.\nlegend: logical flag for including legend. Default is true.\nlegendout: logical flag for moving the legend outside the plot. Default is true. \nlegendtitle: legend title. Default is \"Ranking\". \nresvarcomp: logical flag for indicating residual variance component in σ2path. Default is true. ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Resulting plot includes a legend, which displays the order variance components enter the solution path. Here we use legendout=false option to place the legend within the figure. ","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"We exclude the last variance component (residual variance component) from the solution path:","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"plotsolpath(Σ̂path[1:end-1, :], λpath; legendout=false, resvarcomp=false, \n    ylab=\"trace\\\\Sigma\")","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"(Image: svg)","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"Note the ranking in the legend matches that from rankvarcomps as well:","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"ranking, zerovarcomps = rankvarcomps(Σ̂path)","category":"page"},{"location":"man/VCModel_example/#","page":"VCModel","title":"VCModel","text":"([4, 10, 1, 9, 2, 7, 6, 5, 3], [8, 11])","category":"page"},{"location":"man/VCintModel_example/#VCintModel-1","page":"VCintModel","title":"VCintModel","text":"","category":"section"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Machine information ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"versioninfo()","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Julia Version 1.3.1\nCommit 2d5741174c (2019-12-30 21:36 UTC)\nPlatform Info:\n  OS: macOS (x86_64-apple-darwin18.6.0)\n  CPU: Intel(R) Core(TM) i5-6267U CPU @ 2.90GHz\n  WORD_SIZE: 64\n  LIBM: libopenlibm\n  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)","category":"page"},{"location":"man/VCintModel_example/#Data-1","page":"VCintModel","title":"Data","text":"","category":"section"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Suppose we have the following variables:","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"y: 324-by-1 vector of phenotype of interest \nX: 324-by-1 vector indicating sex of each individual \nG: 150-by-1 vector whose i-th element is a 324-by-q_i genotype matrix (matrix of minor allele counts) for gene i where i=1ldots 150 and q_i is the number of variants for gene i\ntrtvec: 324-by-1 vector indicating treatment status of each individual. ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"These variables are saved in .jld2 file. First, read in variables using JLD2 package. ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"using JLD2\n@load \"/Users/juhyun-kim/Box Sync/workspace/vcselect/data/VCSEL/SNPset_interaction.jld2\" y y2 X G V trtvec","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"6-element Array{Symbol,1}:\n :y     \n :y2    \n :X     \n :G     \n :V     \n :trtvec","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Our phenotype vector: ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"y","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"324-element Array{Float64,1}:\n -0.40911273847444835 \n -0.0597995644528963  \n  0.02798994878695149 \n -0.5810287222548617  \n  0.4325440331155418  \n  0.048256153207898195\n -0.27027696763685594 \n  0.10490944338119751 \n -0.7799009563553139  \n -0.20593444247247622 \n  0.5520065403740653  \n -0.10092686337307819 \n  0.5983104367265357  \n  ⋮                   \n  0.03739468023738035 \n  0.47352506877371714 \n -0.22836115042409924 \n -0.3876214190551975  \n  0.10326243849550518 \n -0.4882830145406528  \n -0.06903684417417116 \n  0.09798041795966334 \n -0.1480073641765541  \n -0.29900800903355274 \n -0.008878790322644575\n -0.09571535379121696","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Covariate matrix indicating sex:","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"X","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"324-element Array{Float64,1}:\n 1.0\n 2.0\n 2.0\n 1.0\n 2.0\n 1.0\n 2.0\n 2.0\n 2.0\n 1.0\n 2.0\n 1.0\n 1.0\n ⋮  \n 1.0\n 1.0\n 2.0\n 2.0\n 2.0\n 1.0\n 1.0\n 2.0\n 1.0\n 1.0\n 1.0\n 2.0","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Vector of genotype matrix for each gene: ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"G","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"150-element Array{Array{Float64,2},1}:\n [2.0 0.0 … 2.0 2.0; 2.0 1.0 … 1.4485981308411215 2.0; … ; 2.0 0.0 … 1.0 2.0; 2.0 0.0 … 2.0 2.0]\n [2.0 2.0 … 2.0 2.0; 2.0 1.0 … 1.0 0.0; … ; 2.0 1.0 … 1.0 0.0; 2.0 2.0 … 1.0 2.0]               \n [2.0 2.0 … 0.0 2.0; 2.0 2.0 … 2.0 2.0; … ; 2.0 2.0 … 1.0 2.0; 2.0 2.0 … 0.0 1.0]               \n [2.0 1.0 … 0.0 2.0; 2.0 1.0 … 0.0 2.0; … ; 2.0 0.0 … 1.0 2.0; 1.0 1.0 … 1.0 2.0]               \n [1.0 2.0 … 0.0 2.0; 1.0 2.0 … 1.0 2.0; … ; 0.0 2.0 … 1.0 2.0; 2.0 2.0 … 0.0 2.0]               \n [2.0 2.0 … 1.0 2.0; 2.0 2.0 … 1.0 2.0; … ; 2.0 2.0 … 1.0 2.0; 2.0 2.0 … 1.0 2.0]               \n [2.0 1.0 … 1.0 2.0; 2.0 1.0 … 1.0 2.0; … ; 2.0 2.0 … 0.0 2.0; 2.0 2.0 … 1.0 2.0]               \n [1.0 1.0 … 1.0 1.0; 1.0 2.0 … 1.0 0.0; … ; 2.0 2.0 … 2.0 1.0; 2.0 2.0 … 2.0 1.0]               \n [2.0 2.0 … 2.0 0.0; 2.0 1.0 … 1.0 0.0; … ; 1.0 2.0 … 2.0 0.0; 2.0 2.0 … 2.0 1.0]               \n [2.0 2.0 … 2.0 1.0; 2.0 2.0 … 2.0 1.0; … ; 2.0 2.0 … 2.0 1.0; 2.0 0.0 … 2.0 1.0]               \n [1.0 2.0 … 2.0 2.0; 0.0 1.0 … 2.0 2.0; … ; 2.0 1.0 … 2.0 2.0; 1.0 0.0 … 1.0 2.0]               \n [2.0 0.0 … 2.0 2.0; 2.0 2.0 … 1.0 2.0; … ; 1.0 2.0 … 2.0 2.0; 1.0 0.0 … 2.0 2.0]               \n [2.0 2.0 … 2.0 1.0; 1.0 2.0 … 2.0 2.0; … ; 1.0 1.0 … 2.0 2.0; 2.0 2.0 … 1.0 1.0]               \n ⋮                                                                                              \n [2.0 0.0 … 1.0 2.0; 2.0 1.0 … 2.0 2.0; … ; 2.0 2.0 … 2.0 2.0; 2.0 0.0 … 1.0 2.0]               \n [0.0 2.0 … 2.0 1.0; 2.0 2.0 … 2.0 1.0; … ; 1.0 2.0 … 2.0 2.0; 2.0 2.0 … 2.0 2.0]               \n [2.0 2.0 … 1.0 1.0; 2.0 2.0 … 1.0 1.0; … ; 2.0 2.0 … 1.0 1.0; 2.0 2.0 … 0.0 2.0]               \n [2.0 2.0 … 0.0 2.0; 2.0 2.0 … 0.0 2.0; … ; 2.0 2.0 … 0.0 2.0; 2.0 2.0 … 1.0 1.0]               \n [2.0 2.0 … 2.0 2.0; 2.0 2.0 … 2.0 2.0; … ; 2.0 2.0 … 2.0 2.0; 2.0 2.0 … 1.0 2.0]               \n [1.0 2.0 … 1.0 2.0; 2.0 2.0 … 2.0 2.0; … ; 1.0 2.0 … 1.0 2.0; 2.0 2.0 … 2.0 2.0]               \n [2.0 2.0 … 1.0 2.0; 2.0 2.0 … 2.0 2.0; … ; 2.0 2.0 … 2.0 2.0; 2.0 1.4583333333333333 … 0.0 2.0]\n [2.0 2.0 … 2.0 2.0; 2.0 2.0 … 1.0 2.0; … ; 2.0 2.0 … 2.0 2.0; 2.0 2.0 … 2.0 2.0]               \n [0.0 2.0 … 2.0 2.0; 2.0 1.0 … 1.0 2.0; … ; 2.0 2.0 … 0.0 2.0; 1.0 1.0 … 0.0 2.0]               \n [2.0 2.0 … 2.0 2.0; 1.0 1.0 … 2.0 2.0; … ; 2.0 2.0 … 2.0 2.0; 2.0 2.0 … 2.0 2.0]               \n [2.0 2.0 … 0.0 2.0; 0.0 0.0 … 2.0 2.0; … ; 0.0 2.0 … 2.0 2.0; 1.0 1.0 … 2.0 2.0]               \n [0.0 2.0 … 0.0 0.0; 1.0 2.0 … 0.0 0.0; … ; 0.0 2.0 … 0.0 0.0; 1.0 2.0 … 1.0 1.0]","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Elements in G are matrices of size 324times q_i Number of rows must be the same (n=324) because each row is for each individual. On the other hand, number of columns vary because number of SNPs/variants vary from gene to gene. Here we list different sizes elements of G have: ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"unique(size.(G))","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"8-element Array{Tuple{Int64,Int64},1}:\n (324, 44)\n (324, 27)\n (324, 47)\n (324, 14)\n (324, 42)\n (324, 29)\n (324, 30)\n (324, 18)","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Vector of treatment status:","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"trtvec","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"324-element Array{Int64,1}:\n 0\n 0\n 0\n 0\n 1\n 1\n 0\n 1\n 0\n 1\n 1\n 1\n 1\n ⋮\n 1\n 1\n 0\n 0\n 0\n 0\n 1\n 0\n 0\n 0\n 0\n 1","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Let us create a diagonal matrix whose elements are from trtvec:","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"using LinearAlgebra\nT = Diagonal(trtvec)","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"324×324 Diagonal{Int64,Array{Int64,1}}:\n 0  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  …  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋅  0  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅     ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋅  ⋅  0  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅     ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋅  ⋅  ⋅  0  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅     ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋅  ⋅  ⋅  ⋅  1  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅     ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋅  ⋅  ⋅  ⋅  ⋅  1  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  …  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  0  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅     ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  1  ⋅  ⋅  ⋅  ⋅  ⋅     ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  0  ⋅  ⋅  ⋅  ⋅     ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  1  ⋅  ⋅  ⋅     ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  1  ⋅  ⋅  …  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  1  ⋅     ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  1     ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋮              ⋮              ⋮        ⋱           ⋮              ⋮         \n ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅     1  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅     ⋅  1  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅     ⋅  ⋅  0  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  …  ⋅  ⋅  ⋅  0  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅     ⋅  ⋅  ⋅  ⋅  0  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅     ⋅  ⋅  ⋅  ⋅  ⋅  0  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅     ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  1  ⋅  ⋅  ⋅  ⋅  ⋅\n ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅     ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  0  ⋅  ⋅  ⋅  ⋅\n ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  …  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  0  ⋅  ⋅  ⋅\n ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅     ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  0  ⋅  ⋅\n ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅     ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  0  ⋅\n ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅     ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  ⋅  1","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Now based on what we have, we will create two vectors of covariance matrices:","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"V: 151-by-1 vector of 324-by-324 matrices \nV[i] $ = Gi Gi^T / ||Gi Gi^T||_F$ where i=1ldots150\nV[end] = I_324  sqrt324\nVint: 150-by-1 vector of 324-by-324 matrices\nVint[i] $ = T Gi Gi^T T^T / ||T Gi Gi^T T^T||_F$ where i = 1ldots 150","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Note that we divide by Frobenius norm (cdot_F) to put matrices on the same scale.","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"n, m = length(y), length(G)\nV = Vector{Matrix{Float64}}(undef, m + 1)\nVint = Vector{Matrix{Float64}}(undef, m)\n    \nfor i in 1:m\n    V[i] = G[i] * G[i]'\n    Vint[i] = T * V[i] * T' \n    V[i] ./= norm(V[i])\n    Vint[i] ./= norm(Vint[i])\nend \nV[end] = Matrix(I, n, n) ./ √n;","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"V","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"151-element Array{Array{Float64,2},1}:\n [0.003291667254666042 0.003021726705196923 … 0.0030853699763006446 0.002995120655146579; 0.003021726705196923 0.0031759677171174796 … 0.0029207450416141385 0.0029624173852930303; … ; 0.0030853699763006446 0.0029207450416141385 … 0.0033536029685539274 0.0030544299750504714; 0.002995120655146579 0.0029624173852930303 … 0.0030544299750504714 0.0034695952143777202]    \n [0.0038736704792971055 0.0031542745331419285 … 0.0034586343565152725 0.00367998695533225; 0.0031542745331419285 0.0030989363834376844 … 0.0032372817576982954 0.0030989363834376844; … ; 0.0034586343565152725 0.0032372817576982954 … 0.0037353251050364945 0.0034032962068110285; 0.00367998695533225 0.0030989363834376844 … 0.0034032962068110285 0.003790663254740739]    \n [0.003134943134737379 0.0029621509934526415 … 0.003011520176676852 0.0027399896689436934; 0.0029621509934526415 0.003283050684410011 … 0.0030608893599010627 0.0028387280353921146; … ; 0.003011520176676852 0.0030608893599010627 … 0.003406473642470538 0.003011520176676852; 0.0027399896689436934 0.0028387280353921146 … 0.003011520176676852 0.0031596277263494844]      \n [0.003047391795491256 0.002753345218733328 … 0.002592956176865367 0.002993928781535269; 0.002753345218733328 0.003020660288513263 … 0.0026196876838433607 0.0029137342606012887; … ; 0.002592956176865367 0.0026196876838433607 … 0.002993928781535269 0.0028870027536232953; 0.002993928781535269 0.0029137342606012887 … 0.0028870027536232953 0.0035018274141171454]        \n [0.003404429118098232 0.00283702426508186 … 0.0027474340251319065 0.0031057949849317206; 0.00283702426508186 0.0031356583982483717 … 0.0026578437851819533 0.0028668876783985112; … ; 0.0027474340251319065 0.0026578437851819533 … 0.0031356583982483717 0.0028668876783985112; 0.0031057949849317206 0.0028668876783985112 … 0.0028668876783985112 0.003583609597998139]     \n [0.0032409556634323353 0.0030115074748707543 … 0.003097550545581347 0.003097550545581347; 0.0030115074748707543 0.0032983177105727307 … 0.0029828264513005564 0.003040188498440952; … ; 0.003097550545581347 0.0029828264513005564 … 0.0034704038519939168 0.0031835936162919404; 0.003097550545581347 0.003040188498440952 … 0.0031835936162919404 0.0034990848755641147]     \n [0.0035446767911210867 0.003295051664985799 … 0.003369939202826385 0.00307038905146404; 0.003295051664985799 0.0034198642280534428 … 0.00327008915237227 0.0031203140766910974; … ; 0.003369939202826385 0.00327008915237227 … 0.0035696393037346155 0.002920613975782867; 0.00307038905146404 0.0031203140766910974 … 0.002920613975782867 0.003170239101918155]              \n [0.0037663181552464184 0.0029512194500065218 … 0.003372822228578882 0.00328850167286441; 0.0029512194500065218 0.0029512194500065218 … 0.002895005746196874 0.0029512194500065218; … ; 0.003372822228578882 0.002895005746196874 … 0.003625783895722298 0.00328850167286441; 0.00328850167286441 0.0029512194500065218 … 0.00328850167286441 0.00356957019191265]              \n [0.0029639639478948555 0.0027024377171982502 … 0.0030220808880496563 0.003051139358127057; 0.0027024377171982502 0.0033417240589010623 … 0.003283607118746261 0.002993022417972256; … ; 0.0030220808880496563 0.003283607118746261 … 0.003893834990371673 0.0033707825289784627; 0.003051139358127057 0.002993022417972256 … 0.0033707825289784627 0.003603250289597667]       \n [0.003543870075083452 0.003165135868585984 … 0.0032733456418709748 0.00297576876533725; 0.003165135868585984 0.0035168176317622044 … 0.00332745052851347 0.0029216638786947542; … ; 0.0032733456418709748 0.00332745052851347 … 0.0035979749617259475 0.003029873651979745; 0.00297576876533725 0.0029216638786947542 … 0.003029873651979745 0.003083978538622241]             \n [0.003597724055776625 0.003378015716492556 … 0.003268161546850522 0.0030209896651559446; 0.003378015716492556 0.003927286564702728 … 0.0035702605133661166 0.0033505521740820475; … ; 0.003268161546850522 0.0035702605133661166 … 0.0036251875981871337 0.003185770919618996; 0.0030209896651559446 0.0033505521740820475 … 0.003185770919618996 0.0034329428013135732]       \n [0.0033080193571827627 0.0031610571994060478 … 0.0033867729577830496 0.0031094872385369053; 0.0031610571994060478 0.0036324429221244936 … 0.0036879000659737226 0.0031610571994060478; … ; 0.0033867729577830496 0.0036879000659737226 … 0.00410382864484294 0.003493800062501421; 0.0031094872385369053 0.0031610571994060478 … 0.003493800062501421 0.0033274286309537345]   \n [0.003499625047158726 0.0031689518143563264 … 0.003251620122556926 0.002810722478820394; 0.0031689518143563264 0.0035547372526257923 … 0.003334288430757526 0.002810722478820394; … ; 0.003251620122556926 0.003334288430757526 … 0.0036649616635599253 0.00294850299248806; 0.002810722478820394 0.002810722478820394 … 0.00294850299248806 0.0029760590952215937]            \n ⋮                                                                                                                                                                                                                                                                                                                                                                              \n [0.0028998507296110997 0.0027472270069999892 … 0.002642527452251615 0.0028998507296110997; 0.0027472270069999892 0.0034340337587499864 … 0.0030270371651203586 0.0032305354619351725; … ; 0.002642527452251615 0.0030270371651203586 … 0.0032071174396322987 0.003074961332983095; 0.0028998507296110997 0.0032305354619351725 … 0.003074961332983095 0.0036884066297685042]   \n [0.003411943374711663 0.003411943374711663 … 0.0031432864160729494 0.003411943374711663; 0.003411943374711663 0.0038686602043974763 … 0.0034656747664394056 0.0036806003333503764; … ; 0.0031432864160729494 0.0034656747664394056 … 0.0034656747664394056 0.0033850776788477916; 0.003411943374711663 0.0036806003333503764 … 0.0033850776788477916 0.003841794508533605]     \n [0.003396949322107603 0.003000638567861716 … 0.0031421781229495327 0.0030289464788792794; 0.003000638567861716 0.0034535651441427295 … 0.003085562300914406 0.0032271018560022227; … ; 0.0031421781229495327 0.003085562300914406 … 0.003396949322107603 0.0031421781229495327; 0.0030289464788792794 0.0032271018560022227 … 0.0031421781229495327 0.003481873055160293]      \n [0.0036012805901930634 0.0031064481426856193 … 0.0032164109087983845 0.0032164109087983845; 0.0031064481426856193 0.0033538643664393413 … 0.003078957451157428 0.003161429525742002; … ; 0.0032164109087983845 0.003078957451157428 … 0.0034913178240802978 0.003161429525742002; 0.0032164109087983845 0.003161429525742002 … 0.003161429525742002 0.0035462992071366804]     \n [0.003152097106652567 0.0027795765395027183 … 0.003123441678410271 0.0028941982524719025; 0.0027795765395027183 0.0035819285302870077 … 0.0033240296761063433 0.003295374247864047; … ; 0.003123441678410271 0.0033240296761063433 … 0.0036965502432561924 0.0033526851043486393; 0.0028941982524719025 0.003295374247864047 … 0.0033526851043486393 0.0038398273844676726]    \n [0.0035351447713590422 0.003247734627346112 … 0.003247734627346112 0.0029866704132010336; 0.003247734627346112 0.0035064037569577495 … 0.003104029555339647 0.0030154114276023263; … ; 0.003247734627346112 0.003104029555339647 … 0.0037075908577668005 0.0029579293987997404; 0.0029866704132010336 0.0030154114276023263 … 0.0029579293987997404 0.003136413094135548]      \n [0.0042235667923218746 0.0034455413305783714 … 0.0034455413305783714 0.0036122610723805506; 0.0034455413305783714 0.0034455413305783714 … 0.0033343948360435856 0.0033343948360435856; … ; 0.0034455413305783714 0.0033343948360435856 … 0.004001273803252303 0.0034455413305783714; 0.0036122610723805506 0.0033343948360435856 … 0.0034455413305783714 0.0036122610723805506]\n [0.0038605293738936874 0.0030779896359422643 … 0.003234497583532549 0.002973651004215408; 0.0030779896359422643 0.0031562436097374064 … 0.0031301589518056925 0.0028693123724885515; … ; 0.003234497583532549 0.0031301589518056925 … 0.003756190742166831 0.0028693123724885515; 0.002973651004215408 0.0028693123724885515 … 0.0028693123724885515 0.0028693123724885515]    \n [0.00367524023077335 0.002864525473985111 … 0.003242859027152956 0.0034050019785106037; 0.002864525473985111 0.003080716075795308 … 0.0029726207748902093 0.003080716075795308; … ; 0.003242859027152956 0.0029726207748902093 … 0.0035671449298682514 0.003459049628963153; 0.0034050019785106037 0.003080716075795308 … 0.003459049628963153 0.003729287881225899]           \n [0.003256676842608022 0.0028636296374656743 … 0.002470582432323327 0.0027513304359964323; 0.0028636296374656743 0.004014696452525406 … 0.0030882280404041585 0.003425125644811885; … ; 0.002470582432323327 0.0030882280404041585 … 0.003481275245546506 0.0029197792382002954; 0.0027513304359964323 0.003425125644811885 … 0.0029197792382002954 0.003368976044077264]       \n [0.0034665013406124123 0.0028887511171770104 … 0.0034665013406124123 0.0033220637847535617; 0.0028887511171770104 0.00274431356131816 … 0.003033188673035861 0.0029609698951064355; … ; 0.0034665013406124123 0.003033188673035861 … 0.0037553764523301134 0.0034665013406124123; 0.0033220637847535617 0.0029609698951064355 … 0.0034665013406124123 0.0036831576744006883]   \n [0.05555555555555555 0.0 … 0.0 0.0; 0.0 0.05555555555555555 … 0.0 0.0; … ; 0.0 0.0 … 0.05555555555555555 0.0; 0.0 0.0 … 0.0 0.05555555555555555]","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Vint","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"150-element Array{Array{Float64,2},1}:\n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.007022323013197897] \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.00773729902969992]  \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0064020557433550306]\n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.007187137793403356] \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.007319758091161073] \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.007135751936863028] \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.006472228768822936] \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.007290657333798592] \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.007352558297122053] \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.006275823676825707] \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.007007827933356927] \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.006784761888262033] \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.006117680992505895] \n ⋮                                                                                                 \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.006520118574719432] \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.007444843376761902] \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.007837303562831814] \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.007064505050943605] \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.007262705264467941] \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.007866553432542413] \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0063771713816501395]\n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0073438971760802175]\n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.005816130601600276] \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.007585650497619714] \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.006763515457664176] \n [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.007764560235884687]","category":"page"},{"location":"man/VCintModel_example/#Model-formulation-1","page":"VCintModel","title":"Model formulation","text":"","category":"section"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"We assume the response vector y is distributed as follows: <a id='modeleqn'></a>","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"y sim N(Xbeta sum_i=1^m left( sigma_i1^2 V_i1 +  sigma_i2^2 V_i2right) + sigma_0^2 I_n ) hspace5em (1)","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"such that each gene/group (indexed by i) is associated with two variance components","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"sigma_i1^2\n: for the gene/group itself \nsigma_i2^2\n: for the interaction between gene/group and treatment status indicated by T. ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Suppose we want to include/exclude main effects and interaction term together as a pair and identify the pairs that are associated with the response y In other words, all-in or all-out! This can be achieved by setting up VCintModel in VarianceComponentSelect package.","category":"page"},{"location":"man/VCintModel_example/#VCintModel-2","page":"VCintModel","title":"VCintModel","text":"","category":"section"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"First load the package. ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"using VCSEL","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"To perform selection, take 2 steps:","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Step 1 (Construct a model). Construct an instance of VCintModel, which is the fundamental type for variance component interaction model. It consists of fields ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Y: n-by-1 responses. \nX: n-by-p covariate matrix (if exists).\nV=(V[1],...,V[m],I): a vector of n-by-n covariance matrices. The last covariance matrix must be positive definite and usually is the identity matrix.\nVint=(Vint[1],...,Vint[m]): a vector of n-by-n covariance matrices. \nΣ=(Σ[1],...,Σ[m],Σ[0]): a vector of initial estimates for variance component parameters. If not supplied, it is set to be a vector of ones by default. In the notation of (1) above, it is equivalent to (sigma_11^2 ldots sigma_m1^2 sigma_0^2)\nΣint=(Σint[1],...,Σint[m]): a vector of initial estimates for variance component parameters. If not supplied, it is set to be a vector of ones by default. In the notation of (1) above, it is equivalent to (sigma_12^2 ldots sigma_m2^2)","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"VCintModel can be initialized by  VCintModel(Y, V, Vint) VCintModel(Y, V, Vint, Σ, Σint) VCintModel(Y, X, V, Vint) VCintModel(Y, X, V, Vint, Σ, Σint) Let us construct a VCintModel using Y, X, Vint and V. ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"vcm = VCintModel(y, X, V, Vint);","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Since we did not provide Σ and Σint, both have been initialized to be a vector of ones. ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"vcm.Σ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"151-element Array{Float64,1}:\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n ⋮  \n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"vcm.Σint","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"150-element Array{Float64,1}:\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n ⋮  \n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0\n 1.0","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Step 2 (optimize). Call optimization routine vcselect!.","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Required input argument for executing vcselect! is VCModel:","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"vcm: VCModel.","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Keyword Arguments are ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"penfun: penalty function. Default is NoPenalty().\nλ: tuning parameter. Default is 1.    \npenwt: penalty weights. Default is (1,...1,0).\nstandardize: logical flag for covariance matrix standardization. Default is true.   If true, V[i] is standardized by its Frobenius norm, and parameter estimates are    returned on the original scale.\nmaxiters: maximum number of iterations. Default is 1000.\ntol: convergence tolerance. Default is 1e-6.\nverbose: display switch. Default is false.\nchecktype: check argument type switch. Default is true.","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"<a id='no-penalty'></a>","category":"page"},{"location":"man/VCintModel_example/#No-penalty-1","page":"VCintModel","title":"No penalty","text":"","category":"section"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"First, we call vcselect! without specifying any penalty function. By default, it is fit with no penalty (i.e. lambda=0).","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"vcm_nopen = deepcopy(vcm)\nvcm_nopen, obj, niters, = vcselect!(vcm_nopen);","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"The output of vcselect! include","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"fitted model ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Estimates can be accessed as below: ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"# variance components for main effect \nvcm_nopen.Σ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"151-element Array{Float64,1}:\n  2.5963273409545298e-73 \n  1.5439706985758424e-7  \n  2.7845360519855295e-120\n  6.889737267658894e-13  \n  3.0779900070490343e-43 \n 10.543433098739069      \n  8.578672602981094e-35  \n  1.5269695674030925e-33 \n  1.6993304550667486e-35 \n  3.3296085240515394e-9  \n  5.512147924579434e-90  \n  3.7878294671111184e-70 \n  1.2271458940210706e-88 \n  ⋮                      \n  9.542566060974258e-77  \n  1.1294134073945298e-24 \n  9.889397642959301e-47  \n  9.203195171446197e-24  \n  8.242876864397448e-24  \n  0.027261479173068266   \n  8.193938421458612e-66  \n  0.000326447581412278   \n  3.844899854910732      \n  5.140003144343048e-75  \n 19.54205330804444       \n  1.0e-5","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"# variance components for interaction effect \nvcm_nopen.Σint","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"150-element Array{Float64,1}:\n 5.583941413028418e-23 \n 4.032502081578074e-5  \n 4.7005690749412404e-45\n 5.906798441125674e-86 \n 1.9753663675986057e-20\n 4.655750245261412e-66 \n 7.856097003369574e-30 \n 1.920963848171632e-63 \n 3.225692325451241e-14 \n 6.362600062147988e-44 \n 7.426714300995976e-65 \n 9.071099826597901e-70 \n 6.389468493257881e-127\n ⋮                     \n 7.673511404849686e-12 \n 2.4052807249110344e-45\n 8.063806215679226e-41 \n 1.1271638588765185e-29\n 2.2133609274252957e-28\n 1.5467148697850265e-39\n 1.7912324787115269e-99\n 2.5809990379022182e-54\n 2.8169429947839254e-25\n 4.0370696435922415e-32\n 8.876979016628995e-61 \n 3.702978317572343","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"# mean regression coefficients \nvcm_nopen.β","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"1-element Array{Float64,1}:\n -0.052533697142513214","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"final objective value","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"obj","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"-6.450758464935063","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"number of iterations taken to converge ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"niters","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"653","category":"page"},{"location":"man/VCintModel_example/#Selection-at-specific-tuning-parameter-1","page":"VCintModel","title":"Selection at specific tuning parameter","text":"","category":"section"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Now we specify penalty function penfun=L1Penalty() and regularization parameter value λ=2.5. ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"vcm_L1 = deepcopy(vcm)\nvcm_L1, obj_L1, niters_L1, = vcselect!(vcm_L1; penfun=L1Penalty(), λ=2.0);","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"vcm_L1.Σ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"151-element Array{Float64,1}:\n 0.0                \n 0.0                \n 0.0                \n 0.0                \n 0.0                \n 0.0                \n 0.0                \n 0.0                \n 0.0                \n 0.0                \n 0.0                \n 0.0                \n 0.0                \n ⋮                  \n 0.0                \n 0.0                \n 0.0                \n 0.0                \n 0.0                \n 0.0                \n 0.0                \n 0.0                \n 0.0                \n 0.0                \n 6.95611535270397   \n 0.06512889698055956","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"vcm_L1.Σint","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"150-element Array{Float64,1}:\n 0.0               \n 0.0               \n 0.0               \n 0.0               \n 0.0               \n 0.0               \n 0.0               \n 0.0               \n 0.0               \n 0.0               \n 0.0               \n 0.0               \n 0.0               \n ⋮                 \n 0.0               \n 0.0               \n 0.0               \n 0.0               \n 0.0               \n 0.0               \n 0.0               \n 0.0               \n 0.0               \n 0.0               \n 0.0               \n 1.3122971294142092","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"vcm_L1.β","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"1-element Array{Float64,1}:\n -0.060222670503915894","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"obj_L1","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"46.00807848829564","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"niters_L1","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"64","category":"page"},{"location":"man/VCintModel_example/#Obtain-solution-path-1","page":"VCintModel","title":"Obtain solution path","text":"","category":"section"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"vcselectpath! function to compute regularization path for a given penalty at a grid of the regularization parameter lambda values. vcselectpath! provides options for users to customize. Keyword arguments for the function are ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"penfun: penalty function (e.g. NoPenalty(), L1Penalty(), MCPPenalty()). Default is NoPenalty().\npenwt: weights for penalty term. Default is (1,1,...1,0).\nnλ: number of λ values in the sequence. Default is 100. \nλpath: user-provided sequence of λ values in ascending order. Typically the program computes its own λ sequence based on nλ, but supplying λpath overrides this.\nmaxiter: maximum number of iteration for MM loop. Default is 1000.\nstandardize: logical flag for covariance matrix standardization. Default is true. If true, V[i] is standardized by its Frobenius norm.\ntol: convergence tolerance. Default is 1e-6.","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"When called without any penalty, vcselectpath! returns the same output as vcselect! with penfun=NoPenalty() (compare the output). ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"vcmpath_np = deepcopy(vcm)\nΣ̂path_np, Σ̂intpath_np, β̂path_np, λpath_np, objpath_np, niterspath_np = vcselectpath!(vcmpath_np)","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"([2.5963273409545298e-73, 1.5439706985758424e-7, 2.7845360519855295e-120, 6.889737267658894e-13, 3.0779900070490343e-43, 10.543433098739069, 8.578672602981094e-35, 1.5269695674030925e-33, 1.6993304550667486e-35, 3.3296085240515394e-9  …  9.889397642959301e-47, 9.203195171446197e-24, 8.242876864397448e-24, 0.027261479173068266, 8.193938421458612e-66, 0.000326447581412278, 3.844899854910732, 5.140003144343048e-75, 19.54205330804444, 1.0e-5], [5.583941413028418e-23, 4.032502081578074e-5, 4.7005690749412404e-45, 5.906798441125674e-86, 1.9753663675986057e-20, 4.655750245261412e-66, 7.856097003369574e-30, 1.920963848171632e-63, 3.225692325451241e-14, 6.362600062147988e-44  …  8.063806215679226e-41, 1.1271638588765185e-29, 2.2133609274252957e-28, 1.5467148697850265e-39, 1.7912324787115269e-99, 2.5809990379022182e-54, 2.8169429947839254e-25, 4.0370696435922415e-32, 8.876979016628995e-61, 3.702978317572343], [-0.052533697142513214], [0.0], -6.450758464935063, 653)","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Σ̂path_np","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"151-element Array{Float64,1}:\n  2.5963273409545298e-73 \n  1.5439706985758424e-7  \n  2.7845360519855295e-120\n  6.889737267658894e-13  \n  3.0779900070490343e-43 \n 10.543433098739069      \n  8.578672602981094e-35  \n  1.5269695674030925e-33 \n  1.6993304550667486e-35 \n  3.3296085240515394e-9  \n  5.512147924579434e-90  \n  3.7878294671111184e-70 \n  1.2271458940210706e-88 \n  ⋮                      \n  9.542566060974258e-77  \n  1.1294134073945298e-24 \n  9.889397642959301e-47  \n  9.203195171446197e-24  \n  8.242876864397448e-24  \n  0.027261479173068266   \n  8.193938421458612e-66  \n  0.000326447581412278   \n  3.844899854910732      \n  5.140003144343048e-75  \n 19.54205330804444       \n  1.0e-5","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Σ̂intpath_np","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"150-element Array{Float64,1}:\n 5.583941413028418e-23 \n 4.032502081578074e-5  \n 4.7005690749412404e-45\n 5.906798441125674e-86 \n 1.9753663675986057e-20\n 4.655750245261412e-66 \n 7.856097003369574e-30 \n 1.920963848171632e-63 \n 3.225692325451241e-14 \n 6.362600062147988e-44 \n 7.426714300995976e-65 \n 9.071099826597901e-70 \n 6.389468493257881e-127\n ⋮                     \n 7.673511404849686e-12 \n 2.4052807249110344e-45\n 8.063806215679226e-41 \n 1.1271638588765185e-29\n 2.2133609274252957e-28\n 1.5467148697850265e-39\n 1.7912324787115269e-99\n 2.5809990379022182e-54\n 2.8169429947839254e-25\n 4.0370696435922415e-32\n 8.876979016628995e-61 \n 3.702978317572343","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Now let us call vcselectpath! with penfun=L1Penalty(). We will specify the number of regularization parameters to be 50, i.e. nλ=50. ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"vcm_path = deepcopy(vcm)\nΣ̂path, Σ̂intpath, β̂path, λpath, objpath, niterspath = vcselectpath!(vcm_path; \n    nλ=50, penfun=L1Penalty());","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Output of vcselectpath! includes","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"path for main effect variance components: (ij)-th element corresponds to i-th variance component (main effect) at λpath[j], i=1ldots 150  j=1ldots 50. The last row is for the residual variance component sigma_0^2 ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Σ̂path","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"151×50 Array{Float64,2}:\n  2.59633e-73    0.0       0.0      …  0.0        0.0        0.0      \n  1.54397e-7     0.0       0.0         0.0        0.0        0.0      \n  2.78454e-120   0.0       0.0         0.0        0.0        0.0      \n  6.88974e-13    0.0       0.0         0.0        0.0        0.0      \n  3.07799e-43    0.0       0.0         0.0        0.0        0.0      \n 10.5434         9.34376   9.361    …  0.0        0.0        0.0      \n  8.57867e-35    0.0       0.0         0.0        0.0        0.0      \n  1.52697e-33    0.0       0.0         0.0        0.0        0.0      \n  1.69933e-35    0.0       0.0         0.0        0.0        0.0      \n  3.32961e-9     0.0       0.0         0.0        0.0        0.0      \n  5.51215e-90    0.0       0.0      …  0.0        0.0        0.0      \n  3.78783e-70    0.0       0.0         0.0        0.0        0.0      \n  1.22715e-88    0.0       0.0         0.0        0.0        0.0      \n  ⋮                                 ⋱                                 \n  9.54257e-77    0.0       0.0         0.0        0.0        0.0      \n  1.12941e-24    0.0       0.0      …  0.0        0.0        0.0      \n  9.8894e-47     0.0       0.0         0.0        0.0        0.0      \n  9.2032e-24     0.0       0.0         0.0        0.0        0.0      \n  8.24288e-24    0.0       0.0         0.0        0.0        0.0      \n  0.0272615      0.0       0.0         0.0        0.0        0.0      \n  8.19394e-66    0.0       0.0      …  0.0        0.0        0.0      \n  0.000326448    0.0       0.0         0.0        0.0        0.0      \n  3.8449         4.38772   3.36216     0.0        0.0        0.0      \n  5.14e-75       0.0       0.0         0.0        0.0        0.0      \n 19.5421        18.1304   16.5744      0.690722   0.658908   0.628273 \n  1.0e-5         1.0e-5    1.0e-5   …  0.0733977  0.0735224  0.0736477","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"path for interaction effect variance components: (ij)-th element corresponds to i-th variance component (interaction effect) at λpath[j], i=1ldots 150  j=1ldots 50. ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Σ̂intpath","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"150×50 Array{Float64,2}:\n 5.58394e-23   0.0          …  0.0     0.0      0.0      0.0    \n 4.0325e-5     0.0             0.0     0.0      0.0      0.0    \n 4.70057e-45   0.0             0.0     0.0      0.0      0.0    \n 5.9068e-86    0.0             0.0     0.0      0.0      0.0    \n 1.97537e-20   0.0             0.0     0.0      0.0      0.0    \n 4.65575e-66   1.4808e-125  …  0.0     0.0      0.0      0.0    \n 7.8561e-30    0.0             0.0     0.0      0.0      0.0    \n 1.92096e-63   0.0             0.0     0.0      0.0      0.0    \n 3.22569e-14   0.0             0.0     0.0      0.0      0.0    \n 6.3626e-44    0.0             0.0     0.0      0.0      0.0    \n 7.42671e-65   0.0          …  0.0     0.0      0.0      0.0    \n 9.0711e-70    0.0             0.0     0.0      0.0      0.0    \n 6.38947e-127  0.0             0.0     0.0      0.0      0.0    \n ⋮                          ⋱                                   \n 7.67351e-12   0.0             0.0     0.0      0.0      0.0    \n 2.40528e-45   0.0             0.0     0.0      0.0      0.0    \n 8.06381e-41   0.0          …  0.0     0.0      0.0      0.0    \n 1.12716e-29   0.0             0.0     0.0      0.0      0.0    \n 2.21336e-28   0.0             0.0     0.0      0.0      0.0    \n 1.54671e-39   0.0             0.0     0.0      0.0      0.0    \n 1.79123e-99   0.0             0.0     0.0      0.0      0.0    \n 2.581e-54     0.0          …  0.0     0.0      0.0      0.0    \n 2.81694e-25   0.0             0.0     0.0      0.0      0.0    \n 4.03707e-32   2.35284e-62     0.0     0.0      0.0      0.0    \n 8.87698e-61   0.0             0.0     0.0      0.0      0.0    \n 3.70298       4.22765         1.6573  1.62503  1.59375  1.56339","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"mean regression coefficient path: j-th element in β̂path corresponds to p-by-d coefficients at λpath[j].","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"β̂path","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"1×50 Array{Float64,2}:\n -0.0525337  -0.0574108  -0.0614433  …  -0.0689376  -0.0694004  -0.0698827","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"grid of lambda values used ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":" λpath","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"0.0:0.2613768180038204:12.807464082187199","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"final objective values at each lambda","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"objpath","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"50-element Array{Float64,1}:\n -6.450758464935063\n 12.608781857439176\n 29.740918146389646\n 46.58745550168618 \n 63.0499817184177  \n 78.51063884431443 \n 44.04671375173535 \n 45.50429333341199 \n 46.88845169092497 \n 48.20288920398775 \n 49.45150824282938 \n 50.639399398007185\n 51.77074241935276 \n  ⋮                \n 65.05170951919716 \n 65.49822962756343 \n 65.93806990303631 \n 66.3714071907036  \n 66.7984070823538  \n 67.21922471233304 \n 67.63400545627302 \n 68.04288555435161 \n 68.44599267068834 \n 68.84344639650688 \n 69.2353587029081  \n 69.62183434809802","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"number of iterations at each lambda","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"niterspath","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"50-element Array{Int64,1}:\n 653\n 587\n 252\n  10\n  17\n 101\n 272\n   9\n  10\n  10\n  11\n  11\n  11\n   ⋮\n   4\n   4\n   4\n   4\n   4\n   4\n   4\n   4\n   4\n   4\n   4\n   4","category":"page"},{"location":"man/VCintModel_example/#Visualize-1","page":"VCintModel","title":"Visualize","text":"","category":"section"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Solution path can be visualized by using plotsolpath function. plotsolpath plots norms of pairs (sigma_i1^2 sigma_i2^2) along lambda values. ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Required arguments are ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Σ̂path: solution path for main effects \nΣ̂intpath: solution path for interaction effects\nλpath: regularization parameter grid.","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Plot can be customized via keyword arguments:","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"title: title of the figure. Default is \"Solution Path\".\nxlab: x-axis label. Default is \"lambda\".\nylab: y-axis label. Default is \"sigma_i^2\".\nxmin: lower limit for x-axis. default is minimum of λpath.\nxmax: upper limit for x-axis. default is maximum of λpath.\nlinewidth: line width. Default is 1.0.\nnranks: no. of ranks to displayed on legend. Default is total number of variance components.\nlegend: logical flag for including legend. Default is true.\nlegendout: logical flag for moving the legend outside the plot. Default is true. \nlegendtitle: legend title. Default is \"Ranking\". \nresvarcomp: logical flag for indicating residual variance component in Σpath. Default is true. ","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"We plot the path:","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"plotsolpath(Σ̂path, Σ̂intpath, λpath)","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"(Image: svg)","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"Since the legend contains too many values, we limit it to 15.","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"plotsolpath(Σ̂path, Σ̂intpath, λpath; nranks=15)","category":"page"},{"location":"man/VCintModel_example/#","page":"VCintModel","title":"VCintModel","text":"(Image: svg)","category":"page"},{"location":"#Home-1","page":"Home","title":"Home","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"VCSEL is a Julia package for implementing Majorization-Minimization (MM) algorithm that selects variance components that are associated with response variable(s) via penalization method. ","category":"page"},{"location":"#Package-Features-1","page":"Home","title":"Package Features","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"VCSEL supports variance component selection for","category":"page"},{"location":"#","page":"Home","title":"Home","text":"a univariate response model \na univariate response model with interaction terms \na multivariate response model ","category":"page"},{"location":"#","page":"Home","title":"Home","text":"using lasso, adaptive lasso, or MCP penalty.  ","category":"page"},{"location":"#Installation-1","page":"Home","title":"Installation","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"This package requires Julia v1.1.0 or later, which can be obtained from https://julialang.org/downloads/ or by building Julia from the sources in the https://github.com/JuliaLang/julia repository.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"The package has not yet been registered and must be installed using the repository location. Start julia and use the ] key to switch to the package manager mode and type the following (after pkg>):","category":"page"},{"location":"#","page":"Home","title":"Home","text":"(@v1.4) pkg> add https://github.com/juhkim111/VCSEL.jl","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Use the backspace key to return to the Julia REPL.","category":"page"},{"location":"#Citation-1","page":"Home","title":"Citation","text":"","category":"section"}]
}
